Search.setIndex({"docnames": ["index", "kong", "kong.client", "kong.ctx", "kong.enterprise_edition", "kong.nginx", "kong.service", "modules"], "filenames": ["index.rst", "kong.rst", "kong.client.rst", "kong.ctx.rst", "kong.enterprise_edition.rst", "kong.nginx.rst", "kong.service.rst", "modules.rst"], "titles": ["Welcome to kong-pdk\u2019s documentation!", "kong package", "kong.client package", "kong.ctx package", "kong.enterprise_edition package", "kong.nginx package", "kong.service package", "kong"], "terms": {"index": 0, "modul": [0, 7], "search": [0, 1, 2], "page": 0, "client": [1, 5, 6, 7], "tl": [1, 6, 7], "disable_session_reus": [1, 2], "get_full_client_certificate_chain": [1, 2], "request_client_certif": [1, 2], "set_client_verifi": [1, 2], "authent": [1, 2, 4, 6], "get_consum": [1, 2], "get_credenti": [1, 2], "get_forwarded_ip": [1, 2], "get_forwarded_port": [1, 2, 7], "get_ip": [1, 2], "get_port": [1, 2, 7], "get_protocol": [1, 2], "load_consum": [1, 2], "ctx": [1, 2, 5, 7], "share": [1, 7], "get": [1, 3, 5, 6, 7], "set": [1, 2, 3, 4, 5, 6], "nginx": [1, 2, 6, 7], "get_ctx": [1, 5], "get_statist": [1, 5], "get_subsystem": [1, 5], "get_tls1_version_str": [1, 5], "get_var": [1, 5], "req_start_tim": [1, 5], "set_ctx": [1, 5], "servic": [1, 2, 7], "add_head": [1, 6, 7], "clear_head": [1, 6, 7], "disable_tl": [1, 6], "enable_buff": [1, 6], "set_bodi": [1, 6], "set_head": [1, 6, 7], "set_method": [1, 6], "set_path": [1, 6], "set_queri": [1, 6], "set_raw_bodi": [1, 6], "set_raw_queri": [1, 6], "set_schem": [1, 6], "get_bodi": [1, 6, 7], "get_head": [1, 6, 7], "get_raw_bodi": [1, 6, 7], "get_statu": [1, 6, 7], "set_target": [1, 6], "set_tls_verifi": [1, 6], "set_tls_verify_depth": [1, 6], "set_upstream": [1, 6], "class": [1, 2, 3, 4, 5, 6], "sourc": [1, 2, 3, 4, 5, 6], "base": [1, 2, 3, 4, 5, 6], "object": [1, 2, 3, 4, 5, 6], "static": [1, 2, 3, 4, 5, 6], "get_id": [1, 7], "tupl": [1, 2, 4, 6], "str": [1, 2, 3, 4, 5, 6], "return": [1, 2, 3, 4, 5, 6], "uniqu": 1, "id": [1, 2], "thi": [1, 2, 4, 6], "If": [1, 2, 4, 6], "i": [1, 2, 4, 5, 6], "run": [1, 6], "db": 1, "less": 1, "mode": 1, "without": [1, 2, 6], "explicitli": 1, "defin": 1, "method": [1, 6], "nil": [1, 2, 4, 6], "For": [1, 6], "hybrid": 1, "all": [1, 6], "control": [1, 6], "plane": 1, "data": [1, 2, 3, 5, 6], "belong": 1, "same": [1, 2, 5, 6], "tradit": 1, "databas": 1, "deploy": 1, "point": 1, "also": [1, 4, 6], "exampl": [1, 2, 5, 6], "err": [1, 2, 4, 6, 7], "handl": [1, 5, 6], "errorif": 1, "avail": 1, "us": [1, 2, 4, 6], "here": [1, 6], "The": [1, 2, 4, 5, 6], "v4": 1, "uuid": 1, "its": [1, 2], "type": [1, 2, 3, 4, 5, 6], "an": [1, 2, 6], "error": [1, 2, 4, 6, 7], "messag": [1, 2, 4, 6], "is_trust": [1, 7], "address": [1, 2, 6], "bool": [1, 2, 6], "depend": [1, 2], "trusted_ip": [1, 2], "configur": [1, 2, 6], "properti": [1, 6], "function": [1, 2, 4, 6], "whether": [1, 2, 4, 6], "given": [1, 2, 4, 6], "trust": [1, 2, 6], "both": [1, 2], "ipv4": 1, "ipv6": 1, "ar": [1, 2, 5, 6], "support": [1, 4, 6], "phase": [1, 2, 6], "init_work": 1, "certif": [1, 2, 6], "rewrit": [1, 2, 6], "access": [1, 2, 6], "header_filt": [1, 2, 6], "body_filt": [1, 2, 6], "1": [1, 2, 4, 6], "paramet": [1, 2, 3, 4, 5, 6], "A": [1, 4, 6], "string": [1, 4, 5, 6], "repres": 1, "true": [1, 2, 6], "fals": [1, 4, 6], "otherwis": [1, 2, 6], "alert": [1, 7], "arg": [1, 6], "ani": [1, 2, 3, 4, 5, 6], "none": [1, 2, 3, 4, 5, 6], "similar": [1, 5], "produc": [1, 6], "ha": [1, 2, 6], "sever": [1, 2, 6], "level": [1, 6], "instead": [1, 2, 6], "notic": [1, 7], "crit": [1, 7], "warn": [1, 7], "info": [1, 7], "debug": [1, 7], "have": [1, 2, 5], "format": [1, 4, 6], "follow": [1, 5, 6], "call": [1, 6], "lua": [1, 2, 6], "hello": [1, 4, 6], "world": [1, 6], "would": [1, 6], "within": [1, 6], "core": [1, 2], "line": 1, "plain": 1, "2017": 1, "07": 1, "09": 1, "19": 1, "36": 1, "25": 1, "25932": 1, "0": [1, 2], "some_fil": 1, "54": 1, "127": [1, 2], "server": [1, 2, 6], "localhost": 1, "http": [1, 2, 5, 6], "host": [1, 6], "invok": 1, "from": [1, 2, 3, 4, 5, 6], "plugin": [6, 7], "kei": [1, 3, 4, 5, 6], "auth": [1, 2], "includ": [1, 5, 6], "namespac": 1, "prefix": 1, "someth": [1, 2, 6], "requir": [1, 2, 4], "attent": 1, "fail": [1, 2, 4, 6], "immedi": 1, "action": 1, "param": 1, "concaten": 1, "stringifi": 1, "befor": [1, 4], "being": [1, 2, 4], "sent": [1, 2, 6], "throw": [1, 2, 6], "invalid": [1, 6], "input": [1, 4, 6], "deprec": [1, 7], "argument": [1, 2, 4, 6], "can": [1, 2, 4, 6], "tabl": [1, 2, 4, 5, 6], "convert": [1, 6], "via": [1, 6], "tostr": 1, "thu": 1, "potenti": 1, "": [1, 2, 3, 5, 6], "__tostr": 1, "metamethod": 1, "when": [1, 2, 6], "last": 1, "consid": [1, 2, 6], "metadata": 1, "after": 1, "2": [1, 4, 6], "5": [1, 4], "version": [1, 5], "default": [1, 2, 4, 6], "remov": [1, 6], "3": [1, 4, 6], "about": 1, "trace": [1, 6], "write": [1, 5], "stack": 1, "along": 1, "And": 1, "metat": 1, "schedul": 1, "serial": [1, 2, 7], "set_serialize_valu": [1, 7], "valu": [1, 2, 3, 5, 6], "option": [1, 2, 4, 6], "custom": [1, 6], "output": [1, 4], "let": 1, "you": [1, 6], "It": 1, "replac": 1, "exist": [1, 2, 6], "delet": [1, 6], "pass": 1, "note": [1, 2], "check": [1, 2, 6], "take": 1, "some": [1, 2, 5], "time": [1, 6], "so": 1, "defer": 1, "which": [1, 2, 6], "happen": [1, 2], "most": 1, "real": 1, "usag": [1, 4], "case": [1, 2, 6], "add": [1, 2, 6], "new": [1, 2], "my_new_valu": 1, "assert": 1, "my": 1, "possibl": [1, 6], "chang": 1, "unset": 1, "dot": 1, "interpret": 1, "4": [1, 4], "new_valu": 1, "name": [1, 2, 5, 6], "field": [1, 2, 5], "must": [1, 2, 6], "number": [1, 2, 5, 6], "boolean": [1, 4, 6], "other": [1, 6], "like": [1, 4], "itself": [1, 6], "recurs": 1, "contain": [1, 4, 6], "two": 1, "entri": [1, 6], "alwai": [1, 2, 6], "onli": [1, 2, 6], "doe": [1, 2, 6], "alreadi": [1, 6], "inform": 1, "get_hostnam": [1, 7], "local": [1, 4, 6], "machin": 1, "hostnam": [1, 6], "describ": [1, 6], "get_memory_stat": [1, 7], "unit": 1, "scale": 1, "memori": [1, 3, 5], "statist": [1, 5], "re": [1, 2, 6], "structur": 1, "lua_shared_dict": 1, "allocated_slab": 1, "12288": 1, "capac": 1, "24576": 1, "kong_db_cach": 1, "workers_lua_vm": 1, "http_allocated_gc": 1, "1102": 1, "pid": 1, "18004": 1, "18005": 1, "k": [1, 3, 5], "12": 1, "kib": 1, "24": 1, "report": [1, 5], "b": 1, "m": 1, "g": [1, 2, 6], "byte": [1, 4, 6], "kibibyt": 1, "mebibyt": 1, "gibibyt": 1, "respect": 1, "digit": 1, "right": [1, 2], "decim": 1, "suffix": 1, "mimetyp": [1, 6], "max_arg": [1, 6], "high": 1, "conveni": 1, "bodi": [1, 6], "pars": [1, 6], "appropri": [1, 6], "specifi": [1, 6], "decod": [1, 4, 6], "preced": 1, "over": 1, "present": [1, 2, 6], "one": [1, 2, 6], "applic": [1, 6], "x": [1, 2, 4, 6], "www": [1, 6], "form": [1, 6], "urlencod": [1, 6], "json": [1, 4, 6], "multipart": [1, 6], "each": [1, 6], "behav": 1, "encod": [1, 2, 6], "get_al": 1, "match": [1, 2, 6], "abov": [1, 6], "indic": [1, 6], "could": [1, 6], "limit": [1, 5, 6], "payload": [1, 4], "third": 1, "per": [1, 3, 5], "allow": [1, 6], "caller": 1, "identifi": 1, "what": [1, 6], "mime": [1, 6], "wa": [1, 2, 6], "admin_api": 1, "john": [1, 6], "ag": [1, 6], "42": [1, 6], "maximum": [1, 6], "represent": 1, "get_forwarded_host": [1, 7], "compon": [1, 6], "url": [1, 6], "header": [1, 2, 4, 5, 6], "unlik": [1, 2, 6], "get_host": [1, 7], "forward": [1, 2], "come": 1, "normal": [1, 6], "lowercas": [1, 6], "doc": [1, 2, 5, 6], "konghq": [1, 2], "com": [1, 2], "gatewai": [1, 2], "latest": [1, 2], "refer": [1, 2], "real_ip_head": [1, 2], "real_ip_recurs": [1, 2], "offer": 1, "extens": 1, "rfc": [1, 6], "7239": 1, "sinc": [1, 6], "ngx_http_realip_modul": 1, "get_forwarded_path": [1, 7], "path": [1, 6], "do": [1, 2, 6], "port": [1, 2, 6], "proto": [1, 2], "behind": 1, "l4": 1, "map": 1, "port_map": 1, "enabl": [1, 6], "listen": 1, "thei": 1, "differ": 1, "1234": [1, 2], "get_forwarded_prefix": [1, 7], "strip": 1, "proxi": [1, 6], "upstream": [1, 6], "mai": 1, "That": [1, 2], "becom": [1, 2], "unless": [1, 5], "get_forwarded_schem": [1, 7], "scheme": [1, 6], "either": [1, 6], "found": [1, 2, 6], "multipl": [1, 6], "first": [1, 6], "occurr": [1, 6], "insensit": [1, 6], "dash": [1, 6], "written": [1, 6], "underscor": [1, 6], "_": [1, 6], "retriev": [1, 6], "x_custom_head": [1, 6], "foo": [1, 6], "bla": [1, 6], "anoth": [1, 6], "bar": [1, 6], "baz": [1, 6], "max_head": [1, 6], "hold": [1, 6], "arrai": [1, 6], "By": [1, 2, 6], "up": [1, 2, 6], "100": [1, 6], "greater": [1, 6], "than": [1, 6], "1000": [1, 6], "x_anoth": [1, 6], "v1": [1, 2], "movi": [1, 2, 6], "get_http_vers": [1, 7], "unrecogn": 1, "get_method": [1, 7], "uppercas": [1, 6], "get_path": [1, 7], "get_raw_path": [1, 7], "accord": [1, 6], "3986": 1, "section": 1, "6": 1, "percent": 1, "unreserv": 1, "charact": [1, 6], "20": 1, "reserv": 1, "hexidecim": 1, "2f": 1, "rel": 1, "element": 1, "dereferenc": 1, "duplic": 1, "slash": 1, "consolid": 1, "t": [1, 2, 6], "abc": 1, "20123": 1, "c3": 1, "b8": 1, "parent": 1, "test": 1, "123\u00f8": 1, "get_path_with_queri": [1, 7], "queri": [1, 6], "No": 1, "transform": 1, "done": 1, "get_queri": [1, 7], "obtain": 1, "unescap": 1, "escap": [1, 6], "rule": 1, "translat": 1, "empti": [1, 6], "20world": [1, 6], "zzz": [1, 6], "blo": [1, 6], "v": [1, 3, 5], "pair": [1, 3, 5], "inspect": [1, 6], "Will": [1, 6], "print": [1, 4], "get_query_arg": [1, 7], "current": [1, 2, 5, 6], "size": 1, "buffer": [1, 6], "client_body_buffer_s": 1, "explain": 1, "earth": 1, "gsub": 1, "mar": 1, "wai": [1, 6], "raw": [1, 2, 6], "perform": [1, 2, 6], "comparis": 1, "dure": 1, "rout": [1, 2], "acl": 1, "author": 1, "rate": 1, "etc": 1, "wide": 1, "regard": 1, "insecur": 1, "leav": 1, "code": [1, 2, 6], "vulner": 1, "travers": 1, "attack": 1, "prefer": 1, "get_raw_queri": [1, 7], "even": [1, 2], "special": [1, 6], "lead": [1, 6], "msg": 1, "get_schem": [1, 7], "get_start_tim": [1, 7], "start": [1, 2, 5], "unix": 1, "epoch": 1, "millisecond": 1, "1649960273000": 1, "timestamp": [1, 5], "ad": [1, 4, 6], "similarli": 1, "cach": [1, 6], "store": [1, 6], "onward": [1, 6], "clear": [1, 2], "statu": [1, 6], "interrupt": 1, "process": [1, 2, 6], "recommend": 1, "conjunct": 1, "oper": [1, 6], "better": 1, "reflect": 1, "mean": [1, 6], "500": 1, "text": 1, "html": [1, 2, 5, 6], "seen": 1, "399": 1, "send": [1, 2], "behavior": [1, 6], "xml": 1, "plaintext": [1, 4], "actual": [1, 6], "determin": 1, "order": [1, 6], "manual": [1, 6], "conform": 1, "accept": [1, 2, 5, 6], "see": [1, 6], "length": [1, 6], "403": 1, "forbidden": 1, "basic": 1, "exit": [1, 7], "typic": 1, "chanc": 1, "e": [1, 2, 4, 6], "reject": [1, 6], "serv": 1, "200": 1, "success": [1, 2, 6], "execut": 1, "flow": 1, "subsequ": 1, "still": [1, 2], "should": [1, 6], "program": 1, "defens": 1, "against": 1, "In": 1, "provid": [1, 2, 6], "primarili": 1, "purpos": 1, "visibl": 1, "directli": [1, 2], "ok": [1, 6], "400": 1, "bad": 1, "intern": 1, "502": 1, "503": 1, "unavail": 1, "second": [1, 2], "As": 1, "On": 1, "grpc": 1, "we": 1, "cannot": 1, "look": [1, 2, 4], "need": [1, 6], "automat": 1, "file": 1, "anyth": [1, 2, 6], "els": [1, 2], "back": [1, 5], "ignor": [1, 6], "preread": [1, 6], "onc": [1, 6], "receiv": [1, 6], "list": [1, 2], "consist": 1, "_and_": 1, "initi": [1, 2, 4], "short": 1, "circuit": 1, "been": [1, 2, 5, 6], "latter": 1, "them": [1, 2, 4], "upon": 1, "recept": 1, "equal": [1, 6], "more": [1, 6], "were": 1, "truncat": [1, 6], "full": [], "chunk": [], "read": [1, 5], "context": [1, 3, 5], "variabl": [1, 2, 5], "ngx": [1, 2, 3, 5], "get_sourc": [1, 6, 7], "help": 1, "where": [1, 5, 6], "origin": [1, 4], "revers": 1, "own": 1, "three": 1, "credenti": [1, 2], "while": [1, 2, 6], "timeout": 1, "connect": [1, 2, 5, 6], "successfulli": 1, "contact": 1, "elseif": 1, "There": 1, "earli": 1, "downstream": [1, 2], "ident": 1, "_not_": 1, "overrid": [1, 2, 6], "want": 1, "deactiv": 1, "lua_transform_underscores_in_response_head": 1, "config": 1, "off": [1, 6], "nginx_http_lua_transform_underscores_in_response_head": 1, "Be": 1, "awar": 1, "might": [1, 6], "break": 1, "reli": 1, "convers": 1, "transfer": 1, "correspond": [1, 6], "result": [1, 2, 6], "lexicograph": [1, 6], "retain": [1, 6], "bear": [1, 6], "those": [1, 5, 6], "remain": [1, 6], "unchang": [1, 6], "boo": [1, 6], "foo3": [1, 6], "bar1": [1, 6], "decid": [], "set_statu": [1, 7], "404": 1, "get_rout": [1, 7], "entiti": [1, 2, 6], "protocol": [1, 2, 6], "get_servic": [1, 7], "target": [1, 6], "resolv": 1, "env": 1, "cert": [1, 2], "failur": [1, 2], "is_refer": [1, 7], "valid": [1, 6], "end": [1, 4], "thorough": 1, "parse_refer": [1, 7], "resourc": [1, 5], "ssl_": 1, "strategi": 1, "secret": 1, "lookup": 1, "ref": 1, "consum": [1, 2], "least": [1, 2], "assum": [1, 2], "yet": [1, 2], "consumer_id": [1, 2], "extern": [1, 2], "remot": [1, 2], "make": [1, 2, 6], "load": [1, 2, 6], "balanc": [1, 2, 6], "front": [1, 2], "through": [1, 2], "10": [1, 2], "answer": [1, 2], "usernam": [1, 2], "password": [1, 2], "proxy_protocol": [1, 2], "40000": [1, 2], "80": [1, 2, 6], "30000": [1, 2], "20000": [1, 2], "allow_termin": [1, 2], "tcp": [1, 2], "deal": [1, 2], "erron": [1, 2], "search_by_usernam": [1, 2], "datastor": [1, 2], "john_do": [1, 2], "truthi": [1, 2], "prevent": [1, 2, 4], "session": [1, 2, 6], "reus": [1, 2], "disabl": [1, 2, 6], "ticket": [1, 2], "pem": [1, 2, 4], "chain": [1, 2], "top": [1, 2], "intermedi": [1, 2], "bottom": [1, 2], "errif": [1, 2], "did": [1, 2], "complet": [1, 2], "mtl": [1, 2], "handshak": [1, 2, 6], "occur": [1, 2, 6], "side": [1, 2], "mutual": [1, 2], "between": [1, 2], "doesn": [1, 2, 6], "howev": [1, 2], "To": [1, 2, 6], "find": [1, 2], "out": [1, 2], "honor": [1, 2], "later": [1, 2], "verif": [1, 2, 6], "gener": [1, 2, 4, 6], "client_verifi": [1, 2], "insid": [1, 2], "ssl_client_verifi": [1, 2], "org": [1, 2, 5, 6], "en": [1, 2, 5, 6], "ngx_http_ssl_modul": [1, 2], "var_ssl_client_verifi": [1, 2], "reason": [1, 2], "unknown": [1, 2], "ca": [1, 2], "variou": [1, 5], "metric": [1, 5], "expos": [1, 5], "ngx_http_stub_status_modul": [1, 5], "connections_act": [1, 5], "activ": [1, 5], "connections_wait": [1, 5], "connections_read": [1, 5], "connections_writ": [1, 5], "idl": [1, 5], "wait": [1, 5], "connections_accept": [1, 5], "total": [1, 5], "connections_handl": [1, 5], "reach": [1, 5], "worker_connect": [1, 5], "ngx_core_modul": [1, 5], "total_request": [1, 5], "nginx_statist": [1, 5], "subsystem": [1, 5], "tlsv1": [1, 5], "ngx_stream_proxy_modul": [1, 6], "stream": [1, 6], "proxy_ssl": [1, 6], "direct": [1, 6], "effect": [1, 6], "succeed": [1, 6], "left": [1, 6], "unspecifi": [1, 6], "chosen": [1, 6], "accordingli": [1, 6], "further": [1, 6], "overridden": [1, 6], "sni": [1, 6], "foo1": [1, 6], "foo2": [1, 6], "head": [1, 6], "put": [1, 6], "post": [1, 6], "mkcol": [1, 6], "copi": [1, 6], "move": [1, 6], "propfind": [1, 6], "proppatch": [1, 6], "lock": [1, 6], "unlock": [1, 6], "patch": [1, 6], "uri": [1, 6], "utf": [1, 6], "8": [1, 6], "api": [1, 6], "necessari": [1, 6], "v2": [1, 6], "addition": [1, 6], "higher": [1, 6], "querystr": [1, 6], "prior": [1, 6], "known": [1, 6], "401": [1, 6], "418": [1, 6], "equival": [1, 6], "ask": [1, 6], "retri": [1, 6], "health": [1, 6], "expect": [1, 6], "443": [1, 6], "192": [1, 6], "168": [1, 6], "130": [1, 6], "flag": [1, 6], "affect": [1, 6], "proxy_ssl_trusted_certif": [1, 6], "ngx_http_proxy_modul": [1, 6], "set_upstream_ssl_trusted_stor": [1, 6], "kongserviceset_upstream_ssl_trusted_stor": [1, 6], "unabl": [1, 6], "issuer": [1, 6], "depth": [1, 6], "proxy_ssl_verifi": [1, 6], "kongserviceset_tls_verifi": [1, 6], "non": [1, 6], "neg": [1, 6], "desir": [1, 6], "step": [1, 6], "creat": [1, 2, 6], "associ": [1, 6], "prod": [1, 6], "log": [2, 6, 7], "request": [2, 3, 5, 7], "respons": [2, 5, 7], "ip": [2, 6, 7], "packag": 7, "subpackag": 7, "submodul": 7, "content": 7, "cluster": 7, "node": 7, "router": 7, "vault": 7, "get_uri_captur": [1, 7], "captur": 1, "idx": 1, "ipair": 1, "unnam": 1, "capturesfor": 1, "unam": 1, "ca_cert": [1, 2], "opaqu": [1, 2], "pointer": [1, 2], "parse_pem_cert": [1, 2], "github": [1, 2], "openresti": [1, 2], "resti": [1, 2], "blob": [1, 2], "master": [1, 2], "lib": [1, 2], "ssl": [1, 2], "md": [1, 2], "opensslx509": [1, 2], "fffonion": [1, 2], "openssl": [1, 2], "restyopensslx509chain": [1, 2], "distinguish": [1, 2], "dn": [1, 2], "hint": [1, 2], "omit": [1, 2], "x509_lib": [1, 2], "x509": [1, 2], "chain_lib": [1, 2], "pem_cert": [1, 2], "stack_of": [1, 2], "cdata": [1, 2], "enterprise_edit": [1, 7], "jwe": [1, 7], "decrypt": [1, 4], "encrypt": [1, 4], "dbless": 1, "lmdb": 1, "map_siz": 1, "128": 1, "00": 1, "mib": 1, "used_s": 1, "02": 1, "last_used_pag": 1, "last_txnid": 1, "max_read": 1, "126": 1, "current_read": 1, "16": 1, "131072": 1, "kb": 1, "48": 1, "instanc": 1, "123e4567": 1, "e89b": 1, "12d3": 1, "a456": 1, "426614174000": 1, "lua_max_post_arg": 1, "lua_max_req_head": 1, "lua_max_uri_arg": 1, "lua_max_resp_head": 1, "flush": [1, 7], "lru": 1, "updat": [1, 7], "helper": 1, "rotat": 1, "ttl": 1, "experiment": 1, "begin": 1, "rsa": [1, 4], "privat": [1, 4], "cert_alt": 1, "key_alt": 1, "ec": [1, 4], "aw": 1, "alt": 1, "modifi": 1, "token": [1, 4], "protect": [1, 4], "appear": [1, 4], "vector": [1, 4], "ciphertext": [1, 4], "tag": [1, 4], "base64url": [1, 4], "encrypted_kei": [1, 4], "iv": [1, 4], "aad": [1, 4], "reconstruct": [1, 4], "concat": [1, 4], "exactli": [1, 4], "part": [1, 4], "jwt": [1, 4], "eyjhbgcioijfq0riluvtiiwizw5jijoiqti1nkddtsisimfwdsi6ik1lufhus2oywfr1nuktyldusfi2bxci": [1, 4], "lcjhchyioijmuhfoa2hfnkdjvfd1sg5ywfzbclvniiwizxbrijp7imt0esi6ikvdiiwiy3j2ijoiuc0yntyi": [1, 4], "lcj4ijoiwwd3ef9nvxrltw9nyupnzxfhsjzjufv1z29oykvvc0i1nndrrlpyrjvmncisinkioiixaeyzyzlr": [1, 4], "vehelvozam1vyup2thzwtgjqcvnasw9knmd4x2ytuzatz21rin19": [1, 4], "4zriopihli3lexy": [1, 4], "ke4ofa": [1, 4], "mi5lt": [1, 4], "kml5nia": [1, 4], "twm": [1, 4], "92f6q": [1, 4], "alg": [1, 4], "ecdh": [1, 4], "jwk": [1, 4], "der": [1, 4], "curv": [1, 4], "p": [1, 4], "256": [1, 4], "384": [1, 4], "521": [1, 4], "kty": [1, 4], "crv": [1, 4], "enc": [1, 4], "mkbctnickusdii11yss3526idz8aito7tu6kpaqv7d4": [1, 4], "y": [1, 4], "4etl6srw2yilurn5vfvvhuhp7x8pxltmwwlbbm4ifym": [1, 4], "d": [1, 4], "870mb6gfutj4htunuvymyjpr5euznp4bk43bvdj3ea": [1, 4], "algorithm": [1, 4], "oaep": [1, 4], "a256gcm": [1, 4], "zip": [1, 4], "def": [1, 4], "deflat": [1, 4], "apu": [1, 4], "agreement": [1, 4], "partyuinfo": [1, 4], "apv": [1, 4], "partyvinfo": [1, 4], "auto": [1, 4], "sixteen": [1, 4], "random": [1, 4], "ephemer": [1, 4], "public": [1, 4], "manag": [1, 4]}, "objects": {"": [[1, 0, 0, "-", "kong"]], "kong": [[2, 0, 0, "-", "client"], [1, 0, 0, "-", "cluster"], [3, 0, 0, "-", "ctx"], [4, 0, 0, "-", "enterprise_edition"], [1, 0, 0, "-", "ip"], [1, 1, 1, "", "kong"], [1, 0, 0, "-", "log"], [5, 0, 0, "-", "nginx"], [1, 0, 0, "-", "node"], [1, 0, 0, "-", "plugin"], [1, 0, 0, "-", "request"], [1, 0, 0, "-", "response"], [1, 0, 0, "-", "router"], [6, 0, 0, "-", "service"], [1, 0, 0, "-", "vault"]], "kong.client": [[2, 1, 1, "", "client"], [2, 0, 0, "-", "tls"]], "kong.client.client": [[2, 2, 1, "", "authenticate"], [2, 2, 1, "", "get_consumer"], [2, 2, 1, "", "get_credential"], [2, 2, 1, "", "get_forwarded_ip"], [2, 2, 1, "", "get_forwarded_port"], [2, 2, 1, "", "get_ip"], [2, 2, 1, "", "get_port"], [2, 2, 1, "", "get_protocol"], [2, 2, 1, "", "load_consumer"], [2, 1, 1, "", "tls"]], "kong.client.client.tls": [[2, 2, 1, "", "disable_session_reuse"], [2, 2, 1, "", "get_full_client_certificate_chain"], [2, 2, 1, "", "request_client_certificate"], [2, 2, 1, "", "set_client_verify"]], "kong.client.tls": [[2, 1, 1, "", "tls"]], "kong.client.tls.tls": [[2, 2, 1, "", "disable_session_reuse"], [2, 2, 1, "", "get_full_client_certificate_chain"], [2, 2, 1, "", "request_client_certificate"], [2, 2, 1, "", "set_client_verify"]], "kong.cluster": [[1, 1, 1, "", "cluster"]], "kong.cluster.cluster": [[1, 2, 1, "", "get_id"]], "kong.ctx": [[3, 1, 1, "", "ctx"], [3, 0, 0, "-", "shared"]], "kong.ctx.ctx": [[3, 1, 1, "", "shared"]], "kong.ctx.ctx.shared": [[3, 2, 1, "", "get"], [3, 2, 1, "", "set"]], "kong.ctx.shared": [[3, 1, 1, "", "shared"]], "kong.ctx.shared.shared": [[3, 2, 1, "", "get"], [3, 2, 1, "", "set"]], "kong.enterprise_edition": [[4, 1, 1, "", "enterprise_edition"], [4, 0, 0, "-", "jwe"]], "kong.enterprise_edition.enterprise_edition": [[4, 1, 1, "", "jwe"]], "kong.enterprise_edition.enterprise_edition.jwe": [[4, 2, 1, "", "decode"], [4, 2, 1, "", "decrypt"], [4, 2, 1, "", "encrypt"]], "kong.enterprise_edition.jwe": [[4, 1, 1, "", "jwe"]], "kong.enterprise_edition.jwe.jwe": [[4, 2, 1, "", "decode"], [4, 2, 1, "", "decrypt"], [4, 2, 1, "", "encrypt"]], "kong.ip": [[1, 1, 1, "", "ip"]], "kong.ip.ip": [[1, 2, 1, "", "is_trusted"]], "kong.kong": [[1, 1, 1, "", "client"], [1, 1, 1, "", "cluster"], [1, 1, 1, "", "ctx"], [1, 1, 1, "", "enterprise_edition"], [1, 1, 1, "", "ip"], [1, 1, 1, "", "log"], [1, 1, 1, "", "nginx"], [1, 1, 1, "", "node"], [1, 1, 1, "", "plugin"], [1, 1, 1, "", "request"], [1, 1, 1, "", "response"], [1, 1, 1, "", "router"], [1, 1, 1, "", "service"], [1, 1, 1, "", "vault"]], "kong.kong.client": [[1, 2, 1, "", "authenticate"], [1, 2, 1, "", "get_consumer"], [1, 2, 1, "", "get_credential"], [1, 2, 1, "", "get_forwarded_ip"], [1, 2, 1, "", "get_forwarded_port"], [1, 2, 1, "", "get_ip"], [1, 2, 1, "", "get_port"], [1, 2, 1, "", "get_protocol"], [1, 2, 1, "", "load_consumer"], [1, 1, 1, "", "tls"]], "kong.kong.client.tls": [[1, 2, 1, "", "disable_session_reuse"], [1, 2, 1, "", "get_full_client_certificate_chain"], [1, 2, 1, "", "request_client_certificate"], [1, 2, 1, "", "set_client_verify"]], "kong.kong.cluster": [[1, 2, 1, "", "get_id"]], "kong.kong.ctx": [[1, 1, 1, "", "shared"]], "kong.kong.ctx.shared": [[1, 2, 1, "", "get"], [1, 2, 1, "", "set"]], "kong.kong.enterprise_edition": [[1, 1, 1, "", "jwe"]], "kong.kong.enterprise_edition.jwe": [[1, 2, 1, "", "decode"], [1, 2, 1, "", "decrypt"], [1, 2, 1, "", "encrypt"]], "kong.kong.ip": [[1, 2, 1, "", "is_trusted"]], "kong.kong.log": [[1, 2, 1, "", "alert"], [1, 2, 1, "", "crit"], [1, 2, 1, "", "debug"], [1, 2, 1, "", "deprecation"], [1, 2, 1, "", "err"], [1, 2, 1, "", "info"], [1, 2, 1, "", "notice"], [1, 2, 1, "", "serialize"], [1, 2, 1, "", "set_serialize_value"], [1, 2, 1, "", "warn"]], "kong.kong.nginx": [[1, 2, 1, "", "get_ctx"], [1, 2, 1, "", "get_statistics"], [1, 2, 1, "", "get_subsystem"], [1, 2, 1, "", "get_tls1_version_str"], [1, 2, 1, "", "get_var"], [1, 2, 1, "", "req_start_time"], [1, 2, 1, "", "set_ctx"], [1, 1, 1, "", "shared"]], "kong.kong.nginx.shared": [[1, 2, 1, "", "get"], [1, 2, 1, "", "set"]], "kong.kong.node": [[1, 2, 1, "", "get_hostname"], [1, 2, 1, "", "get_id"], [1, 2, 1, "", "get_memory_stats"]], "kong.kong.plugin": [[1, 2, 1, "", "get_id"]], "kong.kong.request": [[1, 2, 1, "", "get_body"], [1, 2, 1, "", "get_forwarded_host"], [1, 2, 1, "", "get_forwarded_path"], [1, 2, 1, "", "get_forwarded_port"], [1, 2, 1, "", "get_forwarded_prefix"], [1, 2, 1, "", "get_forwarded_scheme"], [1, 2, 1, "", "get_header"], [1, 2, 1, "", "get_headers"], [1, 2, 1, "", "get_host"], [1, 2, 1, "", "get_http_version"], [1, 2, 1, "", "get_method"], [1, 2, 1, "", "get_path"], [1, 2, 1, "", "get_path_with_query"], [1, 2, 1, "", "get_port"], [1, 2, 1, "", "get_query"], [1, 2, 1, "", "get_query_arg"], [1, 2, 1, "", "get_raw_body"], [1, 2, 1, "", "get_raw_path"], [1, 2, 1, "", "get_raw_query"], [1, 2, 1, "", "get_scheme"], [1, 2, 1, "", "get_start_time"], [1, 2, 1, "", "get_uri_captures"]], "kong.kong.response": [[1, 2, 1, "", "add_header"], [1, 2, 1, "", "clear_header"], [1, 2, 1, "", "error"], [1, 2, 1, "", "exit"], [1, 2, 1, "", "get_header"], [1, 2, 1, "", "get_headers"], [1, 2, 1, "", "get_source"], [1, 2, 1, "", "get_status"], [1, 2, 1, "", "set_header"], [1, 2, 1, "", "set_headers"], [1, 2, 1, "", "set_status"]], "kong.kong.router": [[1, 2, 1, "", "get_route"], [1, 2, 1, "", "get_service"]], "kong.kong.service": [[1, 1, 1, "", "request"], [1, 1, 1, "", "response"], [1, 2, 1, "", "set_target"], [1, 2, 1, "", "set_tls_verify"], [1, 2, 1, "", "set_tls_verify_depth"], [1, 2, 1, "", "set_upstream"]], "kong.kong.service.request": [[1, 2, 1, "", "add_header"], [1, 2, 1, "", "clear_header"], [1, 2, 1, "", "disable_tls"], [1, 2, 1, "", "enable_buffering"], [1, 2, 1, "", "set_body"], [1, 2, 1, "", "set_header"], [1, 2, 1, "", "set_headers"], [1, 2, 1, "", "set_method"], [1, 2, 1, "", "set_path"], [1, 2, 1, "", "set_query"], [1, 2, 1, "", "set_raw_body"], [1, 2, 1, "", "set_raw_query"], [1, 2, 1, "", "set_scheme"]], "kong.kong.service.response": [[1, 2, 1, "", "get_body"], [1, 2, 1, "", "get_header"], [1, 2, 1, "", "get_headers"], [1, 2, 1, "", "get_raw_body"], [1, 2, 1, "", "get_status"]], "kong.kong.vault": [[1, 2, 1, "", "flush"], [1, 2, 1, "", "get"], [1, 2, 1, "", "is_reference"], [1, 2, 1, "", "parse_reference"], [1, 2, 1, "", "update"]], "kong.log": [[1, 1, 1, "", "log"]], "kong.log.log": [[1, 2, 1, "", "alert"], [1, 2, 1, "", "crit"], [1, 2, 1, "", "debug"], [1, 2, 1, "", "deprecation"], [1, 2, 1, "", "err"], [1, 2, 1, "", "info"], [1, 2, 1, "", "notice"], [1, 2, 1, "", "serialize"], [1, 2, 1, "", "set_serialize_value"], [1, 2, 1, "", "warn"]], "kong.nginx": [[5, 1, 1, "", "nginx"], [5, 0, 0, "-", "shared"]], "kong.nginx.nginx": [[5, 2, 1, "", "get_ctx"], [5, 2, 1, "", "get_statistics"], [5, 2, 1, "", "get_subsystem"], [5, 2, 1, "", "get_tls1_version_str"], [5, 2, 1, "", "get_var"], [5, 2, 1, "", "req_start_time"], [5, 2, 1, "", "set_ctx"], [5, 1, 1, "", "shared"]], "kong.nginx.nginx.shared": [[5, 2, 1, "", "get"], [5, 2, 1, "", "set"]], "kong.nginx.shared": [[5, 1, 1, "", "shared"]], "kong.nginx.shared.shared": [[5, 2, 1, "", "get"], [5, 2, 1, "", "set"]], "kong.node": [[1, 1, 1, "", "node"]], "kong.node.node": [[1, 2, 1, "", "get_hostname"], [1, 2, 1, "", "get_id"], [1, 2, 1, "", "get_memory_stats"]], "kong.plugin": [[1, 1, 1, "", "plugin"]], "kong.plugin.plugin": [[1, 2, 1, "", "get_id"]], "kong.request": [[1, 1, 1, "", "request"]], "kong.request.request": [[1, 2, 1, "", "get_body"], [1, 2, 1, "", "get_forwarded_host"], [1, 2, 1, "", "get_forwarded_path"], [1, 2, 1, "", "get_forwarded_port"], [1, 2, 1, "", "get_forwarded_prefix"], [1, 2, 1, "", "get_forwarded_scheme"], [1, 2, 1, "", "get_header"], [1, 2, 1, "", "get_headers"], [1, 2, 1, "", "get_host"], [1, 2, 1, "", "get_http_version"], [1, 2, 1, "", "get_method"], [1, 2, 1, "", "get_path"], [1, 2, 1, "", "get_path_with_query"], [1, 2, 1, "", "get_port"], [1, 2, 1, "", "get_query"], [1, 2, 1, "", "get_query_arg"], [1, 2, 1, "", "get_raw_body"], [1, 2, 1, "", "get_raw_path"], [1, 2, 1, "", "get_raw_query"], [1, 2, 1, "", "get_scheme"], [1, 2, 1, "", "get_start_time"], [1, 2, 1, "", "get_uri_captures"]], "kong.response": [[1, 1, 1, "", "response"]], "kong.response.response": [[1, 2, 1, "", "add_header"], [1, 2, 1, "", "clear_header"], [1, 2, 1, "", "error"], [1, 2, 1, "", "exit"], [1, 2, 1, "", "get_header"], [1, 2, 1, "", "get_headers"], [1, 2, 1, "", "get_source"], [1, 2, 1, "", "get_status"], [1, 2, 1, "", "set_header"], [1, 2, 1, "", "set_headers"], [1, 2, 1, "", "set_status"]], "kong.router": [[1, 1, 1, "", "router"]], "kong.router.router": [[1, 2, 1, "", "get_route"], [1, 2, 1, "", "get_service"]], "kong.service": [[6, 0, 0, "-", "request"], [6, 0, 0, "-", "response"], [6, 1, 1, "", "service"]], "kong.service.request": [[6, 1, 1, "", "request"]], "kong.service.request.request": [[6, 2, 1, "", "add_header"], [6, 2, 1, "", "clear_header"], [6, 2, 1, "", "disable_tls"], [6, 2, 1, "", "enable_buffering"], [6, 2, 1, "", "set_body"], [6, 2, 1, "", "set_header"], [6, 2, 1, "", "set_headers"], [6, 2, 1, "", "set_method"], [6, 2, 1, "", "set_path"], [6, 2, 1, "", "set_query"], [6, 2, 1, "", "set_raw_body"], [6, 2, 1, "", "set_raw_query"], [6, 2, 1, "", "set_scheme"]], "kong.service.response": [[6, 1, 1, "", "response"]], "kong.service.response.response": [[6, 2, 1, "", "get_body"], [6, 2, 1, "", "get_header"], [6, 2, 1, "", "get_headers"], [6, 2, 1, "", "get_raw_body"], [6, 2, 1, "", "get_status"]], "kong.service.service": [[6, 1, 1, "", "request"], [6, 1, 1, "", "response"], [6, 2, 1, "", "set_target"], [6, 2, 1, "", "set_tls_verify"], [6, 2, 1, "", "set_tls_verify_depth"], [6, 2, 1, "", "set_upstream"]], "kong.service.service.request": [[6, 2, 1, "", "add_header"], [6, 2, 1, "", "clear_header"], [6, 2, 1, "", "disable_tls"], [6, 2, 1, "", "enable_buffering"], [6, 2, 1, "", "set_body"], [6, 2, 1, "", "set_header"], [6, 2, 1, "", "set_headers"], [6, 2, 1, "", "set_method"], [6, 2, 1, "", "set_path"], [6, 2, 1, "", "set_query"], [6, 2, 1, "", "set_raw_body"], [6, 2, 1, "", "set_raw_query"], [6, 2, 1, "", "set_scheme"]], "kong.service.service.response": [[6, 2, 1, "", "get_body"], [6, 2, 1, "", "get_header"], [6, 2, 1, "", "get_headers"], [6, 2, 1, "", "get_raw_body"], [6, 2, 1, "", "get_status"]], "kong.vault": [[1, 1, 1, "", "vault"]], "kong.vault.vault": [[1, 2, 1, "", "flush"], [1, 2, 1, "", "get"], [1, 2, 1, "", "is_reference"], [1, 2, 1, "", "parse_reference"], [1, 2, 1, "", "update"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"welcom": 0, "kong": [0, 1, 2, 3, 4, 5, 6, 7], "pdk": 0, "": 0, "document": 0, "indic": 0, "tabl": 0, "packag": [1, 2, 3, 4, 5, 6], "subpackag": 1, "submodul": [1, 2, 3, 4, 5, 6], "cluster": 1, "modul": [1, 2, 3, 4, 5, 6], "ip": 1, "log": 1, "node": 1, "request": [1, 6], "respons": [1, 6], "router": 1, "vault": 1, "content": [1, 2, 3, 4, 5, 6], "client": 2, "tl": 2, "ctx": 3, "share": [3, 5], "nginx": 5, "servic": 6, "plugin": 1, "enterprise_edit": 4, "jwe": 4}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Welcome to kong-pdk\u2019s documentation!": [[0, "welcome-to-kong-pdk-s-documentation"]], "Indices and tables": [[0, "indices-and-tables"]], "kong": [[7, "kong"]], "kong package": [[1, "kong-package"]], "Subpackages": [[1, "subpackages"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"]], "kong.cluster module": [[1, "module-kong.cluster"]], "kong.ip module": [[1, "module-kong.ip"]], "kong.log module": [[1, "module-kong.log"]], "kong.node module": [[1, "module-kong.node"]], "kong.plugin module": [[1, "module-kong.plugin"]], "kong.request module": [[1, "module-kong.request"]], "kong.response module": [[1, "module-kong.response"]], "kong.router module": [[1, "module-kong.router"]], "kong.vault module": [[1, "module-kong.vault"]], "Module contents": [[1, "module-kong"], [2, "module-kong.client"], [3, "module-kong.ctx"], [4, "module-kong.enterprise_edition"], [5, "module-kong.nginx"], [6, "module-kong.service"]], "kong.client package": [[2, "kong-client-package"]], "kong.client.tls module": [[2, "module-kong.client.tls"]], "kong.ctx package": [[3, "kong-ctx-package"]], "kong.ctx.shared module": [[3, "module-kong.ctx.shared"]], "kong.enterprise_edition package": [[4, "kong-enterprise-edition-package"]], "kong.enterprise_edition.jwe module": [[4, "module-kong.enterprise_edition.jwe"]], "kong.nginx package": [[5, "kong-nginx-package"]], "kong.nginx.shared module": [[5, "module-kong.nginx.shared"]], "kong.service package": [[6, "kong-service-package"]], "kong.service.request module": [[6, "module-kong.service.request"]], "kong.service.response module": [[6, "module-kong.service.response"]]}, "indexentries": {"add_header() (kong.kong.response static method)": [[1, "kong.kong.response.add_header"]], "add_header() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.add_header"]], "add_header() (kong.response.response static method)": [[1, "kong.response.response.add_header"]], "alert() (kong.kong.log static method)": [[1, "kong.kong.log.alert"]], "alert() (kong.log.log static method)": [[1, "kong.log.log.alert"]], "authenticate() (kong.kong.client static method)": [[1, "kong.kong.client.authenticate"]], "clear_header() (kong.kong.response static method)": [[1, "kong.kong.response.clear_header"]], "clear_header() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.clear_header"]], "clear_header() (kong.response.response static method)": [[1, "kong.response.response.clear_header"]], "cluster (class in kong.cluster)": [[1, "kong.cluster.cluster"]], "crit() (kong.kong.log static method)": [[1, "kong.kong.log.crit"]], "crit() (kong.log.log static method)": [[1, "kong.log.log.crit"]], "debug() (kong.kong.log static method)": [[1, "kong.kong.log.debug"]], "debug() (kong.log.log static method)": [[1, "kong.log.log.debug"]], "decode() (kong.kong.enterprise_edition.jwe static method)": [[1, "kong.kong.enterprise_edition.jwe.decode"]], "decrypt() (kong.kong.enterprise_edition.jwe static method)": [[1, "kong.kong.enterprise_edition.jwe.decrypt"]], "deprecation() (kong.kong.log static method)": [[1, "kong.kong.log.deprecation"]], "deprecation() (kong.log.log static method)": [[1, "kong.log.log.deprecation"]], "disable_session_reuse() (kong.kong.client.tls static method)": [[1, "kong.kong.client.tls.disable_session_reuse"]], "disable_tls() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.disable_tls"]], "enable_buffering() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.enable_buffering"]], "encrypt() (kong.kong.enterprise_edition.jwe static method)": [[1, "kong.kong.enterprise_edition.jwe.encrypt"]], "err() (kong.kong.log static method)": [[1, "kong.kong.log.err"]], "err() (kong.log.log static method)": [[1, "kong.log.log.err"]], "error() (kong.kong.response static method)": [[1, "kong.kong.response.error"]], "error() (kong.response.response static method)": [[1, "kong.response.response.error"]], "exit() (kong.kong.response static method)": [[1, "kong.kong.response.exit"]], "exit() (kong.response.response static method)": [[1, "kong.response.response.exit"]], "flush() (kong.kong.vault static method)": [[1, "kong.kong.vault.flush"]], "flush() (kong.vault.vault static method)": [[1, "kong.vault.vault.flush"]], "get() (kong.kong.ctx.shared static method)": [[1, "kong.kong.ctx.shared.get"]], "get() (kong.kong.nginx.shared static method)": [[1, "kong.kong.nginx.shared.get"]], "get() (kong.kong.vault static method)": [[1, "kong.kong.vault.get"]], "get() (kong.vault.vault static method)": [[1, "kong.vault.vault.get"]], "get_body() (kong.kong.request static method)": [[1, "kong.kong.request.get_body"]], "get_body() (kong.kong.service.response static method)": [[1, "kong.kong.service.response.get_body"]], "get_body() (kong.request.request static method)": [[1, "kong.request.request.get_body"]], "get_consumer() (kong.kong.client static method)": [[1, "kong.kong.client.get_consumer"]], "get_credential() (kong.kong.client static method)": [[1, "kong.kong.client.get_credential"]], "get_ctx() (kong.kong.nginx static method)": [[1, "kong.kong.nginx.get_ctx"]], "get_forwarded_host() (kong.kong.request static method)": [[1, "kong.kong.request.get_forwarded_host"]], "get_forwarded_host() (kong.request.request static method)": [[1, "kong.request.request.get_forwarded_host"]], "get_forwarded_ip() (kong.kong.client static method)": [[1, "kong.kong.client.get_forwarded_ip"]], "get_forwarded_path() (kong.kong.request static method)": [[1, "kong.kong.request.get_forwarded_path"]], "get_forwarded_path() (kong.request.request static method)": [[1, "kong.request.request.get_forwarded_path"]], "get_forwarded_port() (kong.kong.client static method)": [[1, "kong.kong.client.get_forwarded_port"]], "get_forwarded_port() (kong.kong.request static method)": [[1, "kong.kong.request.get_forwarded_port"]], "get_forwarded_port() (kong.request.request static method)": [[1, "kong.request.request.get_forwarded_port"]], "get_forwarded_prefix() (kong.kong.request static method)": [[1, "kong.kong.request.get_forwarded_prefix"]], "get_forwarded_prefix() (kong.request.request static method)": [[1, "kong.request.request.get_forwarded_prefix"]], "get_forwarded_scheme() (kong.kong.request static method)": [[1, "kong.kong.request.get_forwarded_scheme"]], "get_forwarded_scheme() (kong.request.request static method)": [[1, "kong.request.request.get_forwarded_scheme"]], "get_full_client_certificate_chain() (kong.kong.client.tls static method)": [[1, "kong.kong.client.tls.get_full_client_certificate_chain"]], "get_header() (kong.kong.request static method)": [[1, "kong.kong.request.get_header"]], "get_header() (kong.kong.response static method)": [[1, "kong.kong.response.get_header"]], "get_header() (kong.kong.service.response static method)": [[1, "kong.kong.service.response.get_header"]], "get_header() (kong.request.request static method)": [[1, "kong.request.request.get_header"]], "get_header() (kong.response.response static method)": [[1, "kong.response.response.get_header"]], "get_headers() (kong.kong.request static method)": [[1, "kong.kong.request.get_headers"]], "get_headers() (kong.kong.response static method)": [[1, "kong.kong.response.get_headers"]], "get_headers() (kong.kong.service.response static method)": [[1, "kong.kong.service.response.get_headers"]], "get_headers() (kong.request.request static method)": [[1, "kong.request.request.get_headers"]], "get_headers() (kong.response.response static method)": [[1, "kong.response.response.get_headers"]], "get_host() (kong.kong.request static method)": [[1, "kong.kong.request.get_host"]], "get_host() (kong.request.request static method)": [[1, "kong.request.request.get_host"]], "get_hostname() (kong.kong.node static method)": [[1, "kong.kong.node.get_hostname"]], "get_hostname() (kong.node.node static method)": [[1, "kong.node.node.get_hostname"]], "get_http_version() (kong.kong.request static method)": [[1, "kong.kong.request.get_http_version"]], "get_http_version() (kong.request.request static method)": [[1, "kong.request.request.get_http_version"]], "get_id() (kong.cluster.cluster static method)": [[1, "kong.cluster.cluster.get_id"]], "get_id() (kong.kong.cluster static method)": [[1, "kong.kong.cluster.get_id"]], "get_id() (kong.kong.node static method)": [[1, "kong.kong.node.get_id"]], "get_id() (kong.kong.plugin static method)": [[1, "kong.kong.plugin.get_id"]], "get_id() (kong.node.node static method)": [[1, "kong.node.node.get_id"]], "get_id() (kong.plugin.plugin static method)": [[1, "kong.plugin.plugin.get_id"]], "get_ip() (kong.kong.client static method)": [[1, "kong.kong.client.get_ip"]], "get_memory_stats() (kong.kong.node static method)": [[1, "kong.kong.node.get_memory_stats"]], "get_memory_stats() (kong.node.node static method)": [[1, "kong.node.node.get_memory_stats"]], "get_method() (kong.kong.request static method)": [[1, "kong.kong.request.get_method"]], "get_method() (kong.request.request static method)": [[1, "kong.request.request.get_method"]], "get_path() (kong.kong.request static method)": [[1, "kong.kong.request.get_path"]], "get_path() (kong.request.request static method)": [[1, "kong.request.request.get_path"]], "get_path_with_query() (kong.kong.request static method)": [[1, "kong.kong.request.get_path_with_query"]], "get_path_with_query() (kong.request.request static method)": [[1, "kong.request.request.get_path_with_query"]], "get_port() (kong.kong.client static method)": [[1, "kong.kong.client.get_port"]], "get_port() (kong.kong.request static method)": [[1, "kong.kong.request.get_port"]], "get_port() (kong.request.request static method)": [[1, "kong.request.request.get_port"]], "get_protocol() (kong.kong.client static method)": [[1, "kong.kong.client.get_protocol"]], "get_query() (kong.kong.request static method)": [[1, "kong.kong.request.get_query"]], "get_query() (kong.request.request static method)": [[1, "kong.request.request.get_query"]], "get_query_arg() (kong.kong.request static method)": [[1, "kong.kong.request.get_query_arg"]], "get_query_arg() (kong.request.request static method)": [[1, "kong.request.request.get_query_arg"]], "get_raw_body() (kong.kong.request static method)": [[1, "kong.kong.request.get_raw_body"]], "get_raw_body() (kong.kong.service.response static method)": [[1, "kong.kong.service.response.get_raw_body"]], "get_raw_body() (kong.request.request static method)": [[1, "kong.request.request.get_raw_body"]], "get_raw_path() (kong.kong.request static method)": [[1, "kong.kong.request.get_raw_path"]], "get_raw_path() (kong.request.request static method)": [[1, "kong.request.request.get_raw_path"]], "get_raw_query() (kong.kong.request static method)": [[1, "kong.kong.request.get_raw_query"]], "get_raw_query() (kong.request.request static method)": [[1, "kong.request.request.get_raw_query"]], "get_route() (kong.kong.router static method)": [[1, "kong.kong.router.get_route"]], "get_route() (kong.router.router static method)": [[1, "kong.router.router.get_route"]], "get_scheme() (kong.kong.request static method)": [[1, "kong.kong.request.get_scheme"]], "get_scheme() (kong.request.request static method)": [[1, "kong.request.request.get_scheme"]], "get_service() (kong.kong.router static method)": [[1, "kong.kong.router.get_service"]], "get_service() (kong.router.router static method)": [[1, "kong.router.router.get_service"]], "get_source() (kong.kong.response static method)": [[1, "kong.kong.response.get_source"]], "get_source() (kong.response.response static method)": [[1, "kong.response.response.get_source"]], "get_start_time() (kong.kong.request static method)": [[1, "kong.kong.request.get_start_time"]], "get_start_time() (kong.request.request static method)": [[1, "kong.request.request.get_start_time"]], "get_statistics() (kong.kong.nginx static method)": [[1, "kong.kong.nginx.get_statistics"]], "get_status() (kong.kong.response static method)": [[1, "kong.kong.response.get_status"]], "get_status() (kong.kong.service.response static method)": [[1, "kong.kong.service.response.get_status"]], "get_status() (kong.response.response static method)": [[1, "kong.response.response.get_status"]], "get_subsystem() (kong.kong.nginx static method)": [[1, "kong.kong.nginx.get_subsystem"]], "get_tls1_version_str() (kong.kong.nginx static method)": [[1, "kong.kong.nginx.get_tls1_version_str"]], "get_uri_captures() (kong.kong.request static method)": [[1, "kong.kong.request.get_uri_captures"]], "get_uri_captures() (kong.request.request static method)": [[1, "kong.request.request.get_uri_captures"]], "get_var() (kong.kong.nginx static method)": [[1, "kong.kong.nginx.get_var"]], "info() (kong.kong.log static method)": [[1, "kong.kong.log.info"]], "info() (kong.log.log static method)": [[1, "kong.log.log.info"]], "ip (class in kong.ip)": [[1, "kong.ip.ip"]], "is_reference() (kong.kong.vault static method)": [[1, "kong.kong.vault.is_reference"]], "is_reference() (kong.vault.vault static method)": [[1, "kong.vault.vault.is_reference"]], "is_trusted() (kong.ip.ip static method)": [[1, "kong.ip.ip.is_trusted"]], "is_trusted() (kong.kong.ip static method)": [[1, "kong.kong.ip.is_trusted"]], "kong": [[1, "module-kong"]], "kong (class in kong)": [[1, "kong.kong"]], "kong.client (class in kong)": [[1, "kong.kong.client"]], "kong.client.tls (class in kong)": [[1, "kong.kong.client.tls"]], "kong.cluster": [[1, "module-kong.cluster"]], "kong.cluster (class in kong)": [[1, "kong.kong.cluster"]], "kong.ctx (class in kong)": [[1, "kong.kong.ctx"]], "kong.ctx.shared (class in kong)": [[1, "kong.kong.ctx.shared"]], "kong.enterprise_edition (class in kong)": [[1, "kong.kong.enterprise_edition"]], "kong.enterprise_edition.jwe (class in kong)": [[1, "kong.kong.enterprise_edition.jwe"]], "kong.ip": [[1, "module-kong.ip"]], "kong.ip (class in kong)": [[1, "kong.kong.ip"]], "kong.log": [[1, "module-kong.log"]], "kong.log (class in kong)": [[1, "kong.kong.log"]], "kong.nginx (class in kong)": [[1, "kong.kong.nginx"]], "kong.nginx.shared (class in kong)": [[1, "kong.kong.nginx.shared"]], "kong.node": [[1, "module-kong.node"]], "kong.node (class in kong)": [[1, "kong.kong.node"]], "kong.plugin": [[1, "module-kong.plugin"]], "kong.plugin (class in kong)": [[1, "kong.kong.plugin"]], "kong.request": [[1, "module-kong.request"]], "kong.request (class in kong)": [[1, "kong.kong.request"]], "kong.response": [[1, "module-kong.response"]], "kong.response (class in kong)": [[1, "kong.kong.response"]], "kong.router": [[1, "module-kong.router"]], "kong.router (class in kong)": [[1, "kong.kong.router"]], "kong.service (class in kong)": [[1, "kong.kong.service"]], "kong.service.request (class in kong)": [[1, "kong.kong.service.request"]], "kong.service.response (class in kong)": [[1, "kong.kong.service.response"]], "kong.vault": [[1, "module-kong.vault"]], "kong.vault (class in kong)": [[1, "kong.kong.vault"]], "load_consumer() (kong.kong.client static method)": [[1, "kong.kong.client.load_consumer"]], "log (class in kong.log)": [[1, "kong.log.log"]], "module": [[1, "module-kong"], [1, "module-kong.cluster"], [1, "module-kong.ip"], [1, "module-kong.log"], [1, "module-kong.node"], [1, "module-kong.plugin"], [1, "module-kong.request"], [1, "module-kong.response"], [1, "module-kong.router"], [1, "module-kong.vault"], [2, "module-kong.client"], [2, "module-kong.client.tls"], [3, "module-kong.ctx"], [3, "module-kong.ctx.shared"], [4, "module-kong.enterprise_edition"], [4, "module-kong.enterprise_edition.jwe"], [5, "module-kong.nginx"], [5, "module-kong.nginx.shared"], [6, "module-kong.service"], [6, "module-kong.service.request"], [6, "module-kong.service.response"]], "node (class in kong.node)": [[1, "kong.node.node"]], "notice() (kong.kong.log static method)": [[1, "kong.kong.log.notice"]], "notice() (kong.log.log static method)": [[1, "kong.log.log.notice"]], "parse_reference() (kong.kong.vault static method)": [[1, "kong.kong.vault.parse_reference"]], "parse_reference() (kong.vault.vault static method)": [[1, "kong.vault.vault.parse_reference"]], "plugin (class in kong.plugin)": [[1, "kong.plugin.plugin"]], "req_start_time() (kong.kong.nginx static method)": [[1, "kong.kong.nginx.req_start_time"]], "request (class in kong.request)": [[1, "kong.request.request"]], "request_client_certificate() (kong.kong.client.tls static method)": [[1, "kong.kong.client.tls.request_client_certificate"]], "response (class in kong.response)": [[1, "kong.response.response"]], "router (class in kong.router)": [[1, "kong.router.router"]], "serialize() (kong.kong.log static method)": [[1, "kong.kong.log.serialize"]], "serialize() (kong.log.log static method)": [[1, "kong.log.log.serialize"]], "set() (kong.kong.ctx.shared static method)": [[1, "kong.kong.ctx.shared.set"]], "set() (kong.kong.nginx.shared static method)": [[1, "kong.kong.nginx.shared.set"]], "set_body() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.set_body"]], "set_client_verify() (kong.kong.client.tls static method)": [[1, "kong.kong.client.tls.set_client_verify"]], "set_ctx() (kong.kong.nginx static method)": [[1, "kong.kong.nginx.set_ctx"]], "set_header() (kong.kong.response static method)": [[1, "kong.kong.response.set_header"]], "set_header() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.set_header"]], "set_header() (kong.response.response static method)": [[1, "kong.response.response.set_header"]], "set_headers() (kong.kong.response static method)": [[1, "kong.kong.response.set_headers"]], "set_headers() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.set_headers"]], "set_headers() (kong.response.response static method)": [[1, "kong.response.response.set_headers"]], "set_method() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.set_method"]], "set_path() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.set_path"]], "set_query() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.set_query"]], "set_raw_body() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.set_raw_body"]], "set_raw_query() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.set_raw_query"]], "set_scheme() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.set_scheme"]], "set_serialize_value() (kong.kong.log static method)": [[1, "kong.kong.log.set_serialize_value"]], "set_serialize_value() (kong.log.log static method)": [[1, "kong.log.log.set_serialize_value"]], "set_status() (kong.kong.response static method)": [[1, "kong.kong.response.set_status"]], "set_status() (kong.response.response static method)": [[1, "kong.response.response.set_status"]], "set_target() (kong.kong.service static method)": [[1, "kong.kong.service.set_target"]], "set_tls_verify() (kong.kong.service static method)": [[1, "kong.kong.service.set_tls_verify"]], "set_tls_verify_depth() (kong.kong.service static method)": [[1, "kong.kong.service.set_tls_verify_depth"]], "set_upstream() (kong.kong.service static method)": [[1, "kong.kong.service.set_upstream"]], "update() (kong.kong.vault static method)": [[1, "kong.kong.vault.update"]], "update() (kong.vault.vault static method)": [[1, "kong.vault.vault.update"]], "vault (class in kong.vault)": [[1, "kong.vault.vault"]], "warn() (kong.kong.log static method)": [[1, "kong.kong.log.warn"]], "warn() (kong.log.log static method)": [[1, "kong.log.log.warn"]], "authenticate() (kong.client.client static method)": [[2, "kong.client.client.authenticate"]], "client (class in kong.client)": [[2, "kong.client.client"]], "client.tls (class in kong.client)": [[2, "kong.client.client.tls"]], "disable_session_reuse() (kong.client.client.tls static method)": [[2, "kong.client.client.tls.disable_session_reuse"]], "disable_session_reuse() (kong.client.tls.tls static method)": [[2, "kong.client.tls.tls.disable_session_reuse"]], "get_consumer() (kong.client.client static method)": [[2, "kong.client.client.get_consumer"]], "get_credential() (kong.client.client static method)": [[2, "kong.client.client.get_credential"]], "get_forwarded_ip() (kong.client.client static method)": [[2, "kong.client.client.get_forwarded_ip"]], "get_forwarded_port() (kong.client.client static method)": [[2, "kong.client.client.get_forwarded_port"]], "get_full_client_certificate_chain() (kong.client.client.tls static method)": [[2, "kong.client.client.tls.get_full_client_certificate_chain"]], "get_full_client_certificate_chain() (kong.client.tls.tls static method)": [[2, "kong.client.tls.tls.get_full_client_certificate_chain"]], "get_ip() (kong.client.client static method)": [[2, "kong.client.client.get_ip"]], "get_port() (kong.client.client static method)": [[2, "kong.client.client.get_port"]], "get_protocol() (kong.client.client static method)": [[2, "kong.client.client.get_protocol"]], "kong.client": [[2, "module-kong.client"]], "kong.client.tls": [[2, "module-kong.client.tls"]], "load_consumer() (kong.client.client static method)": [[2, "kong.client.client.load_consumer"]], "request_client_certificate() (kong.client.client.tls static method)": [[2, "kong.client.client.tls.request_client_certificate"]], "request_client_certificate() (kong.client.tls.tls static method)": [[2, "kong.client.tls.tls.request_client_certificate"]], "set_client_verify() (kong.client.client.tls static method)": [[2, "kong.client.client.tls.set_client_verify"]], "set_client_verify() (kong.client.tls.tls static method)": [[2, "kong.client.tls.tls.set_client_verify"]], "tls (class in kong.client.tls)": [[2, "kong.client.tls.tls"]], "ctx (class in kong.ctx)": [[3, "kong.ctx.ctx"]], "ctx.shared (class in kong.ctx)": [[3, "kong.ctx.ctx.shared"]], "get() (kong.ctx.ctx.shared static method)": [[3, "kong.ctx.ctx.shared.get"]], "get() (kong.ctx.shared.shared static method)": [[3, "kong.ctx.shared.shared.get"]], "kong.ctx": [[3, "module-kong.ctx"]], "kong.ctx.shared": [[3, "module-kong.ctx.shared"]], "set() (kong.ctx.ctx.shared static method)": [[3, "kong.ctx.ctx.shared.set"]], "set() (kong.ctx.shared.shared static method)": [[3, "kong.ctx.shared.shared.set"]], "shared (class in kong.ctx.shared)": [[3, "kong.ctx.shared.shared"]], "decode() (kong.enterprise_edition.enterprise_edition.jwe static method)": [[4, "kong.enterprise_edition.enterprise_edition.jwe.decode"]], "decode() (kong.enterprise_edition.jwe.jwe static method)": [[4, "kong.enterprise_edition.jwe.jwe.decode"]], "decrypt() (kong.enterprise_edition.enterprise_edition.jwe static method)": [[4, "kong.enterprise_edition.enterprise_edition.jwe.decrypt"]], "decrypt() (kong.enterprise_edition.jwe.jwe static method)": [[4, "kong.enterprise_edition.jwe.jwe.decrypt"]], "encrypt() (kong.enterprise_edition.enterprise_edition.jwe static method)": [[4, "kong.enterprise_edition.enterprise_edition.jwe.encrypt"]], "encrypt() (kong.enterprise_edition.jwe.jwe static method)": [[4, "kong.enterprise_edition.jwe.jwe.encrypt"]], "enterprise_edition (class in kong.enterprise_edition)": [[4, "kong.enterprise_edition.enterprise_edition"]], "enterprise_edition.jwe (class in kong.enterprise_edition)": [[4, "kong.enterprise_edition.enterprise_edition.jwe"]], "jwe (class in kong.enterprise_edition.jwe)": [[4, "kong.enterprise_edition.jwe.jwe"]], "kong.enterprise_edition": [[4, "module-kong.enterprise_edition"]], "kong.enterprise_edition.jwe": [[4, "module-kong.enterprise_edition.jwe"]], "get() (kong.nginx.nginx.shared static method)": [[5, "kong.nginx.nginx.shared.get"]], "get() (kong.nginx.shared.shared static method)": [[5, "kong.nginx.shared.shared.get"]], "get_ctx() (kong.nginx.nginx static method)": [[5, "kong.nginx.nginx.get_ctx"]], "get_statistics() (kong.nginx.nginx static method)": [[5, "kong.nginx.nginx.get_statistics"]], "get_subsystem() (kong.nginx.nginx static method)": [[5, "kong.nginx.nginx.get_subsystem"]], "get_tls1_version_str() (kong.nginx.nginx static method)": [[5, "kong.nginx.nginx.get_tls1_version_str"]], "get_var() (kong.nginx.nginx static method)": [[5, "kong.nginx.nginx.get_var"]], "kong.nginx": [[5, "module-kong.nginx"]], "kong.nginx.shared": [[5, "module-kong.nginx.shared"]], "nginx (class in kong.nginx)": [[5, "kong.nginx.nginx"]], "nginx.shared (class in kong.nginx)": [[5, "kong.nginx.nginx.shared"]], "req_start_time() (kong.nginx.nginx static method)": [[5, "kong.nginx.nginx.req_start_time"]], "set() (kong.nginx.nginx.shared static method)": [[5, "kong.nginx.nginx.shared.set"]], "set() (kong.nginx.shared.shared static method)": [[5, "kong.nginx.shared.shared.set"]], "set_ctx() (kong.nginx.nginx static method)": [[5, "kong.nginx.nginx.set_ctx"]], "shared (class in kong.nginx.shared)": [[5, "kong.nginx.shared.shared"]], "add_header() (kong.service.request.request static method)": [[6, "kong.service.request.request.add_header"]], "add_header() (kong.service.service.request static method)": [[6, "kong.service.service.request.add_header"]], "clear_header() (kong.service.request.request static method)": [[6, "kong.service.request.request.clear_header"]], "clear_header() (kong.service.service.request static method)": [[6, "kong.service.service.request.clear_header"]], "disable_tls() (kong.service.request.request static method)": [[6, "kong.service.request.request.disable_tls"]], "disable_tls() (kong.service.service.request static method)": [[6, "kong.service.service.request.disable_tls"]], "enable_buffering() (kong.service.request.request static method)": [[6, "kong.service.request.request.enable_buffering"]], "enable_buffering() (kong.service.service.request static method)": [[6, "kong.service.service.request.enable_buffering"]], "get_body() (kong.service.response.response static method)": [[6, "kong.service.response.response.get_body"]], "get_body() (kong.service.service.response static method)": [[6, "kong.service.service.response.get_body"]], "get_header() (kong.service.response.response static method)": [[6, "kong.service.response.response.get_header"]], "get_header() (kong.service.service.response static method)": [[6, "kong.service.service.response.get_header"]], "get_headers() (kong.service.response.response static method)": [[6, "kong.service.response.response.get_headers"]], "get_headers() (kong.service.service.response static method)": [[6, "kong.service.service.response.get_headers"]], "get_raw_body() (kong.service.response.response static method)": [[6, "kong.service.response.response.get_raw_body"]], "get_raw_body() (kong.service.service.response static method)": [[6, "kong.service.service.response.get_raw_body"]], "get_status() (kong.service.response.response static method)": [[6, "kong.service.response.response.get_status"]], "get_status() (kong.service.service.response static method)": [[6, "kong.service.service.response.get_status"]], "kong.service": [[6, "module-kong.service"]], "kong.service.request": [[6, "module-kong.service.request"]], "kong.service.response": [[6, "module-kong.service.response"]], "request (class in kong.service.request)": [[6, "kong.service.request.request"]], "response (class in kong.service.response)": [[6, "kong.service.response.response"]], "service (class in kong.service)": [[6, "kong.service.service"]], "service.request (class in kong.service)": [[6, "kong.service.service.request"]], "service.response (class in kong.service)": [[6, "kong.service.service.response"]], "set_body() (kong.service.request.request static method)": [[6, "kong.service.request.request.set_body"]], "set_body() (kong.service.service.request static method)": [[6, "kong.service.service.request.set_body"]], "set_header() (kong.service.request.request static method)": [[6, "kong.service.request.request.set_header"]], "set_header() (kong.service.service.request static method)": [[6, "kong.service.service.request.set_header"]], "set_headers() (kong.service.request.request static method)": [[6, "kong.service.request.request.set_headers"]], "set_headers() (kong.service.service.request static method)": [[6, "kong.service.service.request.set_headers"]], "set_method() (kong.service.request.request static method)": [[6, "kong.service.request.request.set_method"]], "set_method() (kong.service.service.request static method)": [[6, "kong.service.service.request.set_method"]], "set_path() (kong.service.request.request static method)": [[6, "kong.service.request.request.set_path"]], "set_path() (kong.service.service.request static method)": [[6, "kong.service.service.request.set_path"]], "set_query() (kong.service.request.request static method)": [[6, "kong.service.request.request.set_query"]], "set_query() (kong.service.service.request static method)": [[6, "kong.service.service.request.set_query"]], "set_raw_body() (kong.service.request.request static method)": [[6, "kong.service.request.request.set_raw_body"]], "set_raw_body() (kong.service.service.request static method)": [[6, "kong.service.service.request.set_raw_body"]], "set_raw_query() (kong.service.request.request static method)": [[6, "kong.service.request.request.set_raw_query"]], "set_raw_query() (kong.service.service.request static method)": [[6, "kong.service.service.request.set_raw_query"]], "set_scheme() (kong.service.request.request static method)": [[6, "kong.service.request.request.set_scheme"]], "set_scheme() (kong.service.service.request static method)": [[6, "kong.service.service.request.set_scheme"]], "set_target() (kong.service.service static method)": [[6, "kong.service.service.set_target"]], "set_tls_verify() (kong.service.service static method)": [[6, "kong.service.service.set_tls_verify"]], "set_tls_verify_depth() (kong.service.service static method)": [[6, "kong.service.service.set_tls_verify_depth"]], "set_upstream() (kong.service.service static method)": [[6, "kong.service.service.set_upstream"]]}})