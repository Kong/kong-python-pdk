Search.setIndex({"alltitles": {"Indices and tables": [[0, "indices-and-tables"]], "Module contents": [[1, "module-kong"], [2, "module-kong.client"], [3, "module-kong.ctx"], [4, "module-kong.enterprise_edition"], [5, "module-kong.nginx"], [6, "module-kong.service"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"]], "Subpackages": [[1, "subpackages"]], "Welcome to kong-pdk\u2019s documentation!": [[0, null]], "kong": [[7, null]], "kong package": [[1, null]], "kong.client package": [[2, null]], "kong.client.tls module": [[2, "module-kong.client.tls"]], "kong.cluster module": [[1, "module-kong.cluster"]], "kong.ctx package": [[3, null]], "kong.ctx.shared module": [[3, "module-kong.ctx.shared"]], "kong.enterprise_edition package": [[4, null]], "kong.enterprise_edition.jwe module": [[4, "module-kong.enterprise_edition.jwe"]], "kong.ip module": [[1, "module-kong.ip"]], "kong.log module": [[1, "module-kong.log"]], "kong.nginx package": [[5, null]], "kong.nginx.shared module": [[5, "module-kong.nginx.shared"]], "kong.node module": [[1, "module-kong.node"]], "kong.plugin module": [[1, "module-kong.plugin"]], "kong.request module": [[1, "module-kong.request"]], "kong.response module": [[1, "module-kong.response"]], "kong.router module": [[1, "module-kong.router"]], "kong.service package": [[6, null]], "kong.service.request module": [[6, "module-kong.service.request"]], "kong.service.response module": [[6, "module-kong.service.response"]], "kong.telemetry module": [[1, "module-kong.telemetry"]], "kong.vault module": [[1, "module-kong.vault"]]}, "docnames": ["index", "kong", "kong.client", "kong.ctx", "kong.enterprise_edition", "kong.nginx", "kong.service", "modules"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["index.rst", "kong.rst", "kong.client.rst", "kong.ctx.rst", "kong.enterprise_edition.rst", "kong.nginx.rst", "kong.service.rst", "modules.rst"], "indexentries": {"add_header() (kong.kong.response static method)": [[1, "kong.kong.response.add_header", false]], "add_header() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.add_header", false]], "add_header() (kong.response.response static method)": [[1, "kong.response.response.add_header", false]], "add_header() (kong.service.request.request static method)": [[6, "kong.service.request.request.add_header", false]], "add_header() (kong.service.service.request static method)": [[6, "kong.service.service.request.add_header", false]], "alert() (kong.kong.log static method)": [[1, "kong.kong.log.alert", false]], "alert() (kong.log.log static method)": [[1, "kong.log.log.alert", false]], "authenticate() (kong.client.client static method)": [[2, "kong.client.client.authenticate", false]], "authenticate() (kong.kong.client static method)": [[1, "kong.kong.client.authenticate", false]], "authenticate_consumer_group_by_consumer_id() (kong.client.client static method)": [[2, "kong.client.client.authenticate_consumer_group_by_consumer_id", false]], "authenticate_consumer_group_by_consumer_id() (kong.kong.client static method)": [[1, "kong.kong.client.authenticate_consumer_group_by_consumer_id", false]], "clear_header() (kong.kong.response static method)": [[1, "kong.kong.response.clear_header", false]], "clear_header() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.clear_header", false]], "clear_header() (kong.response.response static method)": [[1, "kong.response.response.clear_header", false]], "clear_header() (kong.service.request.request static method)": [[6, "kong.service.request.request.clear_header", false]], "clear_header() (kong.service.service.request static method)": [[6, "kong.service.service.request.clear_header", false]], "client (class in kong.client)": [[2, "kong.client.client", false]], "client.tls (class in kong.client)": [[2, "kong.client.client.tls", false]], "cluster (class in kong.cluster)": [[1, "kong.cluster.cluster", false]], "crit() (kong.kong.log static method)": [[1, "kong.kong.log.crit", false]], "crit() (kong.log.log static method)": [[1, "kong.log.log.crit", false]], "ctx (class in kong.ctx)": [[3, "kong.ctx.ctx", false]], "ctx.shared (class in kong.ctx)": [[3, "kong.ctx.ctx.shared", false]], "debug() (kong.kong.log static method)": [[1, "kong.kong.log.debug", false]], "debug() (kong.log.log static method)": [[1, "kong.log.log.debug", false]], "decode() (kong.enterprise_edition.enterprise_edition.jwe static method)": [[4, "kong.enterprise_edition.enterprise_edition.jwe.decode", false]], "decode() (kong.enterprise_edition.jwe.jwe static method)": [[4, "kong.enterprise_edition.jwe.jwe.decode", false]], "decode() (kong.kong.enterprise_edition.jwe static method)": [[1, "kong.kong.enterprise_edition.jwe.decode", false]], "decrypt() (kong.enterprise_edition.enterprise_edition.jwe static method)": [[4, "kong.enterprise_edition.enterprise_edition.jwe.decrypt", false]], "decrypt() (kong.enterprise_edition.jwe.jwe static method)": [[4, "kong.enterprise_edition.jwe.jwe.decrypt", false]], "decrypt() (kong.kong.enterprise_edition.jwe static method)": [[1, "kong.kong.enterprise_edition.jwe.decrypt", false]], "deprecation() (kong.kong.log static method)": [[1, "kong.kong.log.deprecation", false]], "deprecation() (kong.log.log static method)": [[1, "kong.log.log.deprecation", false]], "disable_session_reuse() (kong.client.client.tls static method)": [[2, "kong.client.client.tls.disable_session_reuse", false]], "disable_session_reuse() (kong.client.tls.tls static method)": [[2, "kong.client.tls.tls.disable_session_reuse", false]], "disable_session_reuse() (kong.kong.client.tls static method)": [[1, "kong.kong.client.tls.disable_session_reuse", false]], "disable_tls() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.disable_tls", false]], "disable_tls() (kong.service.request.request static method)": [[6, "kong.service.request.request.disable_tls", false]], "disable_tls() (kong.service.service.request static method)": [[6, "kong.service.service.request.disable_tls", false]], "enable_buffering() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.enable_buffering", false]], "enable_buffering() (kong.service.request.request static method)": [[6, "kong.service.request.request.enable_buffering", false]], "enable_buffering() (kong.service.service.request static method)": [[6, "kong.service.service.request.enable_buffering", false]], "encrypt() (kong.enterprise_edition.enterprise_edition.jwe static method)": [[4, "kong.enterprise_edition.enterprise_edition.jwe.encrypt", false]], "encrypt() (kong.enterprise_edition.jwe.jwe static method)": [[4, "kong.enterprise_edition.jwe.jwe.encrypt", false]], "encrypt() (kong.kong.enterprise_edition.jwe static method)": [[1, "kong.kong.enterprise_edition.jwe.encrypt", false]], "enterprise_edition (class in kong.enterprise_edition)": [[4, "kong.enterprise_edition.enterprise_edition", false]], "enterprise_edition.jwe (class in kong.enterprise_edition)": [[4, "kong.enterprise_edition.enterprise_edition.jwe", false]], "err() (kong.kong.log static method)": [[1, "kong.kong.log.err", false]], "err() (kong.log.log static method)": [[1, "kong.log.log.err", false]], "error() (kong.kong.response static method)": [[1, "kong.kong.response.error", false]], "error() (kong.response.response static method)": [[1, "kong.response.response.error", false]], "exit() (kong.kong.response static method)": [[1, "kong.kong.response.exit", false]], "exit() (kong.response.response static method)": [[1, "kong.response.response.exit", false]], "flush() (kong.kong.vault static method)": [[1, "kong.kong.vault.flush", false]], "flush() (kong.vault.vault static method)": [[1, "kong.vault.vault.flush", false]], "get() (kong.ctx.ctx.shared static method)": [[3, "kong.ctx.ctx.shared.get", false]], "get() (kong.ctx.shared.shared static method)": [[3, "kong.ctx.shared.shared.get", false]], "get() (kong.kong.ctx.shared static method)": [[1, "kong.kong.ctx.shared.get", false]], "get() (kong.kong.nginx.shared static method)": [[1, "kong.kong.nginx.shared.get", false]], "get() (kong.kong.vault static method)": [[1, "kong.kong.vault.get", false]], "get() (kong.nginx.nginx.shared static method)": [[5, "kong.nginx.nginx.shared.get", false]], "get() (kong.nginx.shared.shared static method)": [[5, "kong.nginx.shared.shared.get", false]], "get() (kong.vault.vault static method)": [[1, "kong.vault.vault.get", false]], "get_body() (kong.kong.request static method)": [[1, "kong.kong.request.get_body", false]], "get_body() (kong.kong.service.response static method)": [[1, "kong.kong.service.response.get_body", false]], "get_body() (kong.request.request static method)": [[1, "kong.request.request.get_body", false]], "get_body() (kong.service.response.response static method)": [[6, "kong.service.response.response.get_body", false]], "get_body() (kong.service.service.response static method)": [[6, "kong.service.service.response.get_body", false]], "get_consumer() (kong.client.client static method)": [[2, "kong.client.client.get_consumer", false]], "get_consumer() (kong.kong.client static method)": [[1, "kong.kong.client.get_consumer", false]], "get_consumer_group() (kong.client.client static method)": [[2, "kong.client.client.get_consumer_group", false]], "get_consumer_group() (kong.kong.client static method)": [[1, "kong.kong.client.get_consumer_group", false]], "get_consumer_groups() (kong.client.client static method)": [[2, "kong.client.client.get_consumer_groups", false]], "get_consumer_groups() (kong.kong.client static method)": [[1, "kong.kong.client.get_consumer_groups", false]], "get_credential() (kong.client.client static method)": [[2, "kong.client.client.get_credential", false]], "get_credential() (kong.kong.client static method)": [[1, "kong.kong.client.get_credential", false]], "get_ctx() (kong.kong.nginx static method)": [[1, "kong.kong.nginx.get_ctx", false]], "get_ctx() (kong.nginx.nginx static method)": [[5, "kong.nginx.nginx.get_ctx", false]], "get_forwarded_host() (kong.kong.request static method)": [[1, "kong.kong.request.get_forwarded_host", false]], "get_forwarded_host() (kong.request.request static method)": [[1, "kong.request.request.get_forwarded_host", false]], "get_forwarded_ip() (kong.client.client static method)": [[2, "kong.client.client.get_forwarded_ip", false]], "get_forwarded_ip() (kong.kong.client static method)": [[1, "kong.kong.client.get_forwarded_ip", false]], "get_forwarded_path() (kong.kong.request static method)": [[1, "kong.kong.request.get_forwarded_path", false]], "get_forwarded_path() (kong.request.request static method)": [[1, "kong.request.request.get_forwarded_path", false]], "get_forwarded_port() (kong.client.client static method)": [[2, "kong.client.client.get_forwarded_port", false]], "get_forwarded_port() (kong.kong.client static method)": [[1, "kong.kong.client.get_forwarded_port", false]], "get_forwarded_port() (kong.kong.request static method)": [[1, "kong.kong.request.get_forwarded_port", false]], "get_forwarded_port() (kong.request.request static method)": [[1, "kong.request.request.get_forwarded_port", false]], "get_forwarded_prefix() (kong.kong.request static method)": [[1, "kong.kong.request.get_forwarded_prefix", false]], "get_forwarded_prefix() (kong.request.request static method)": [[1, "kong.request.request.get_forwarded_prefix", false]], "get_forwarded_scheme() (kong.kong.request static method)": [[1, "kong.kong.request.get_forwarded_scheme", false]], "get_forwarded_scheme() (kong.request.request static method)": [[1, "kong.request.request.get_forwarded_scheme", false]], "get_full_client_certificate_chain() (kong.client.client.tls static method)": [[2, "kong.client.client.tls.get_full_client_certificate_chain", false]], "get_full_client_certificate_chain() (kong.client.tls.tls static method)": [[2, "kong.client.tls.tls.get_full_client_certificate_chain", false]], "get_full_client_certificate_chain() (kong.kong.client.tls static method)": [[1, "kong.kong.client.tls.get_full_client_certificate_chain", false]], "get_header() (kong.kong.request static method)": [[1, "kong.kong.request.get_header", false]], "get_header() (kong.kong.response static method)": [[1, "kong.kong.response.get_header", false]], "get_header() (kong.kong.service.response static method)": [[1, "kong.kong.service.response.get_header", false]], "get_header() (kong.request.request static method)": [[1, "kong.request.request.get_header", false]], "get_header() (kong.response.response static method)": [[1, "kong.response.response.get_header", false]], "get_header() (kong.service.response.response static method)": [[6, "kong.service.response.response.get_header", false]], "get_header() (kong.service.service.response static method)": [[6, "kong.service.service.response.get_header", false]], "get_headers() (kong.kong.request static method)": [[1, "kong.kong.request.get_headers", false]], "get_headers() (kong.kong.response static method)": [[1, "kong.kong.response.get_headers", false]], "get_headers() (kong.kong.service.response static method)": [[1, "kong.kong.service.response.get_headers", false]], "get_headers() (kong.request.request static method)": [[1, "kong.request.request.get_headers", false]], "get_headers() (kong.response.response static method)": [[1, "kong.response.response.get_headers", false]], "get_headers() (kong.service.response.response static method)": [[6, "kong.service.response.response.get_headers", false]], "get_headers() (kong.service.service.response static method)": [[6, "kong.service.service.response.get_headers", false]], "get_host() (kong.kong.request static method)": [[1, "kong.kong.request.get_host", false]], "get_host() (kong.request.request static method)": [[1, "kong.request.request.get_host", false]], "get_hostname() (kong.kong.node static method)": [[1, "kong.kong.node.get_hostname", false]], "get_hostname() (kong.node.node static method)": [[1, "kong.node.node.get_hostname", false]], "get_http_version() (kong.kong.request static method)": [[1, "kong.kong.request.get_http_version", false]], "get_http_version() (kong.request.request static method)": [[1, "kong.request.request.get_http_version", false]], "get_id() (kong.cluster.cluster static method)": [[1, "kong.cluster.cluster.get_id", false]], "get_id() (kong.kong.cluster static method)": [[1, "kong.kong.cluster.get_id", false]], "get_id() (kong.kong.node static method)": [[1, "kong.kong.node.get_id", false]], "get_id() (kong.kong.plugin static method)": [[1, "kong.kong.plugin.get_id", false]], "get_id() (kong.node.node static method)": [[1, "kong.node.node.get_id", false]], "get_id() (kong.plugin.plugin static method)": [[1, "kong.plugin.plugin.get_id", false]], "get_ip() (kong.client.client static method)": [[2, "kong.client.client.get_ip", false]], "get_ip() (kong.kong.client static method)": [[1, "kong.kong.client.get_ip", false]], "get_memory_stats() (kong.kong.node static method)": [[1, "kong.kong.node.get_memory_stats", false]], "get_memory_stats() (kong.node.node static method)": [[1, "kong.node.node.get_memory_stats", false]], "get_method() (kong.kong.request static method)": [[1, "kong.kong.request.get_method", false]], "get_method() (kong.request.request static method)": [[1, "kong.request.request.get_method", false]], "get_path() (kong.kong.request static method)": [[1, "kong.kong.request.get_path", false]], "get_path() (kong.request.request static method)": [[1, "kong.request.request.get_path", false]], "get_path_with_query() (kong.kong.request static method)": [[1, "kong.kong.request.get_path_with_query", false]], "get_path_with_query() (kong.request.request static method)": [[1, "kong.request.request.get_path_with_query", false]], "get_port() (kong.client.client static method)": [[2, "kong.client.client.get_port", false]], "get_port() (kong.kong.client static method)": [[1, "kong.kong.client.get_port", false]], "get_port() (kong.kong.request static method)": [[1, "kong.kong.request.get_port", false]], "get_port() (kong.request.request static method)": [[1, "kong.request.request.get_port", false]], "get_protocol() (kong.client.client static method)": [[2, "kong.client.client.get_protocol", false]], "get_protocol() (kong.kong.client static method)": [[1, "kong.kong.client.get_protocol", false]], "get_query() (kong.kong.request static method)": [[1, "kong.kong.request.get_query", false]], "get_query() (kong.request.request static method)": [[1, "kong.request.request.get_query", false]], "get_query_arg() (kong.kong.request static method)": [[1, "kong.kong.request.get_query_arg", false]], "get_query_arg() (kong.request.request static method)": [[1, "kong.request.request.get_query_arg", false]], "get_raw_body() (kong.kong.request static method)": [[1, "kong.kong.request.get_raw_body", false]], "get_raw_body() (kong.kong.service.response static method)": [[1, "kong.kong.service.response.get_raw_body", false]], "get_raw_body() (kong.request.request static method)": [[1, "kong.request.request.get_raw_body", false]], "get_raw_body() (kong.service.response.response static method)": [[6, "kong.service.response.response.get_raw_body", false]], "get_raw_body() (kong.service.service.response static method)": [[6, "kong.service.service.response.get_raw_body", false]], "get_raw_path() (kong.kong.request static method)": [[1, "kong.kong.request.get_raw_path", false]], "get_raw_path() (kong.request.request static method)": [[1, "kong.request.request.get_raw_path", false]], "get_raw_query() (kong.kong.request static method)": [[1, "kong.kong.request.get_raw_query", false]], "get_raw_query() (kong.request.request static method)": [[1, "kong.request.request.get_raw_query", false]], "get_route() (kong.kong.router static method)": [[1, "kong.kong.router.get_route", false]], "get_route() (kong.router.router static method)": [[1, "kong.router.router.get_route", false]], "get_scheme() (kong.kong.request static method)": [[1, "kong.kong.request.get_scheme", false]], "get_scheme() (kong.request.request static method)": [[1, "kong.request.request.get_scheme", false]], "get_service() (kong.kong.router static method)": [[1, "kong.kong.router.get_service", false]], "get_service() (kong.router.router static method)": [[1, "kong.router.router.get_service", false]], "get_source() (kong.kong.response static method)": [[1, "kong.kong.response.get_source", false]], "get_source() (kong.response.response static method)": [[1, "kong.response.response.get_source", false]], "get_start_time() (kong.kong.request static method)": [[1, "kong.kong.request.get_start_time", false]], "get_start_time() (kong.request.request static method)": [[1, "kong.request.request.get_start_time", false]], "get_statistics() (kong.kong.nginx static method)": [[1, "kong.kong.nginx.get_statistics", false]], "get_statistics() (kong.nginx.nginx static method)": [[5, "kong.nginx.nginx.get_statistics", false]], "get_status() (kong.kong.response static method)": [[1, "kong.kong.response.get_status", false]], "get_status() (kong.kong.service.response static method)": [[1, "kong.kong.service.response.get_status", false]], "get_status() (kong.response.response static method)": [[1, "kong.response.response.get_status", false]], "get_status() (kong.service.response.response static method)": [[6, "kong.service.response.response.get_status", false]], "get_status() (kong.service.service.response static method)": [[6, "kong.service.service.response.get_status", false]], "get_subsystem() (kong.kong.nginx static method)": [[1, "kong.kong.nginx.get_subsystem", false]], "get_subsystem() (kong.nginx.nginx static method)": [[5, "kong.nginx.nginx.get_subsystem", false]], "get_tls1_version_str() (kong.kong.nginx static method)": [[1, "kong.kong.nginx.get_tls1_version_str", false]], "get_tls1_version_str() (kong.nginx.nginx static method)": [[5, "kong.nginx.nginx.get_tls1_version_str", false]], "get_uri_captures() (kong.kong.request static method)": [[1, "kong.kong.request.get_uri_captures", false]], "get_uri_captures() (kong.request.request static method)": [[1, "kong.request.request.get_uri_captures", false]], "get_var() (kong.kong.nginx static method)": [[1, "kong.kong.nginx.get_var", false]], "get_var() (kong.nginx.nginx static method)": [[5, "kong.nginx.nginx.get_var", false]], "info() (kong.kong.log static method)": [[1, "kong.kong.log.info", false]], "info() (kong.log.log static method)": [[1, "kong.log.log.info", false]], "init_worker() (kong.kong.vault static method)": [[1, "kong.kong.vault.init_worker", false]], "init_worker() (kong.vault.vault static method)": [[1, "kong.vault.vault.init_worker", false]], "ip (class in kong.ip)": [[1, "kong.ip.ip", false]], "is_reference() (kong.kong.vault static method)": [[1, "kong.kong.vault.is_reference", false]], "is_reference() (kong.vault.vault static method)": [[1, "kong.vault.vault.is_reference", false]], "is_trusted() (kong.ip.ip static method)": [[1, "kong.ip.ip.is_trusted", false]], "is_trusted() (kong.kong.ip static method)": [[1, "kong.kong.ip.is_trusted", false]], "jwe (class in kong.enterprise_edition.jwe)": [[4, "kong.enterprise_edition.jwe.jwe", false]], "kong": [[1, "module-kong", false]], "kong (class in kong)": [[1, "kong.kong", false]], "kong.client": [[2, "module-kong.client", false]], "kong.client (class in kong)": [[1, "kong.kong.client", false]], "kong.client.tls": [[2, "module-kong.client.tls", false]], "kong.client.tls (class in kong)": [[1, "kong.kong.client.tls", false]], "kong.cluster": [[1, "module-kong.cluster", false]], "kong.cluster (class in kong)": [[1, "kong.kong.cluster", false]], "kong.ctx": [[3, "module-kong.ctx", false]], "kong.ctx (class in kong)": [[1, "kong.kong.ctx", false]], "kong.ctx.shared": [[3, "module-kong.ctx.shared", false]], "kong.ctx.shared (class in kong)": [[1, "kong.kong.ctx.shared", false]], "kong.enterprise_edition": [[4, "module-kong.enterprise_edition", false]], "kong.enterprise_edition (class in kong)": [[1, "kong.kong.enterprise_edition", false]], "kong.enterprise_edition.jwe": [[4, "module-kong.enterprise_edition.jwe", false]], "kong.enterprise_edition.jwe (class in kong)": [[1, "kong.kong.enterprise_edition.jwe", false]], "kong.ip": [[1, "module-kong.ip", false]], "kong.ip (class in kong)": [[1, "kong.kong.ip", false]], "kong.log": [[1, "module-kong.log", false]], "kong.log (class in kong)": [[1, "kong.kong.log", false]], "kong.nginx": [[5, "module-kong.nginx", false]], "kong.nginx (class in kong)": [[1, "kong.kong.nginx", false]], "kong.nginx.shared": [[5, "module-kong.nginx.shared", false]], "kong.nginx.shared (class in kong)": [[1, "kong.kong.nginx.shared", false]], "kong.node": [[1, "module-kong.node", false]], "kong.node (class in kong)": [[1, "kong.kong.node", false]], "kong.plugin": [[1, "module-kong.plugin", false]], "kong.plugin (class in kong)": [[1, "kong.kong.plugin", false]], "kong.request": [[1, "module-kong.request", false]], "kong.request (class in kong)": [[1, "kong.kong.request", false]], "kong.response": [[1, "module-kong.response", false]], "kong.response (class in kong)": [[1, "kong.kong.response", false]], "kong.router": [[1, "module-kong.router", false]], "kong.router (class in kong)": [[1, "kong.kong.router", false]], "kong.service": [[6, "module-kong.service", false]], "kong.service (class in kong)": [[1, "kong.kong.service", false]], "kong.service.request": [[6, "module-kong.service.request", false]], "kong.service.request (class in kong)": [[1, "kong.kong.service.request", false]], "kong.service.response": [[6, "module-kong.service.response", false]], "kong.service.response (class in kong)": [[1, "kong.kong.service.response", false]], "kong.telemetry": [[1, "module-kong.telemetry", false]], "kong.telemetry (class in kong)": [[1, "kong.kong.telemetry", false]], "kong.vault": [[1, "module-kong.vault", false]], "kong.vault (class in kong)": [[1, "kong.kong.vault", false]], "load_consumer() (kong.client.client static method)": [[2, "kong.client.client.load_consumer", false]], "load_consumer() (kong.kong.client static method)": [[1, "kong.kong.client.load_consumer", false]], "log (class in kong.log)": [[1, "kong.log.log", false]], "log() (kong.kong.telemetry static method)": [[1, "kong.kong.telemetry.log", false]], "log() (kong.telemetry.telemetry static method)": [[1, "kong.telemetry.telemetry.log", false]], "module": [[1, "module-kong", false], [1, "module-kong.cluster", false], [1, "module-kong.ip", false], [1, "module-kong.log", false], [1, "module-kong.node", false], [1, "module-kong.plugin", false], [1, "module-kong.request", false], [1, "module-kong.response", false], [1, "module-kong.router", false], [1, "module-kong.telemetry", false], [1, "module-kong.vault", false], [2, "module-kong.client", false], [2, "module-kong.client.tls", false], [3, "module-kong.ctx", false], [3, "module-kong.ctx.shared", false], [4, "module-kong.enterprise_edition", false], [4, "module-kong.enterprise_edition.jwe", false], [5, "module-kong.nginx", false], [5, "module-kong.nginx.shared", false], [6, "module-kong.service", false], [6, "module-kong.service.request", false], [6, "module-kong.service.response", false]], "nginx (class in kong.nginx)": [[5, "kong.nginx.nginx", false]], "nginx.shared (class in kong.nginx)": [[5, "kong.nginx.nginx.shared", false]], "node (class in kong.node)": [[1, "kong.node.node", false]], "notice() (kong.kong.log static method)": [[1, "kong.kong.log.notice", false]], "notice() (kong.log.log static method)": [[1, "kong.log.log.notice", false]], "parse_reference() (kong.kong.vault static method)": [[1, "kong.kong.vault.parse_reference", false]], "parse_reference() (kong.vault.vault static method)": [[1, "kong.vault.vault.parse_reference", false]], "plugin (class in kong.plugin)": [[1, "kong.plugin.plugin", false]], "req_start_time() (kong.kong.nginx static method)": [[1, "kong.kong.nginx.req_start_time", false]], "req_start_time() (kong.nginx.nginx static method)": [[5, "kong.nginx.nginx.req_start_time", false]], "request (class in kong.request)": [[1, "kong.request.request", false]], "request (class in kong.service.request)": [[6, "kong.service.request.request", false]], "request_client_certificate() (kong.client.client.tls static method)": [[2, "kong.client.client.tls.request_client_certificate", false]], "request_client_certificate() (kong.client.tls.tls static method)": [[2, "kong.client.tls.tls.request_client_certificate", false]], "request_client_certificate() (kong.kong.client.tls static method)": [[1, "kong.kong.client.tls.request_client_certificate", false]], "response (class in kong.response)": [[1, "kong.response.response", false]], "response (class in kong.service.response)": [[6, "kong.service.response.response", false]], "router (class in kong.router)": [[1, "kong.router.router", false]], "serialize() (kong.kong.log static method)": [[1, "kong.kong.log.serialize", false]], "serialize() (kong.log.log static method)": [[1, "kong.log.log.serialize", false]], "service (class in kong.service)": [[6, "kong.service.service", false]], "service.request (class in kong.service)": [[6, "kong.service.service.request", false]], "service.response (class in kong.service)": [[6, "kong.service.service.response", false]], "set() (kong.ctx.ctx.shared static method)": [[3, "kong.ctx.ctx.shared.set", false]], "set() (kong.ctx.shared.shared static method)": [[3, "kong.ctx.shared.shared.set", false]], "set() (kong.kong.ctx.shared static method)": [[1, "kong.kong.ctx.shared.set", false]], "set() (kong.kong.nginx.shared static method)": [[1, "kong.kong.nginx.shared.set", false]], "set() (kong.nginx.nginx.shared static method)": [[5, "kong.nginx.nginx.shared.set", false]], "set() (kong.nginx.shared.shared static method)": [[5, "kong.nginx.shared.shared.set", false]], "set_authenticated_consumer_group() (kong.client.client static method)": [[2, "kong.client.client.set_authenticated_consumer_group", false]], "set_authenticated_consumer_group() (kong.kong.client static method)": [[1, "kong.kong.client.set_authenticated_consumer_group", false]], "set_authenticated_consumer_groups() (kong.client.client static method)": [[2, "kong.client.client.set_authenticated_consumer_groups", false]], "set_authenticated_consumer_groups() (kong.kong.client static method)": [[1, "kong.kong.client.set_authenticated_consumer_groups", false]], "set_body() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.set_body", false]], "set_body() (kong.service.request.request static method)": [[6, "kong.service.request.request.set_body", false]], "set_body() (kong.service.service.request static method)": [[6, "kong.service.service.request.set_body", false]], "set_client_verify() (kong.client.client.tls static method)": [[2, "kong.client.client.tls.set_client_verify", false]], "set_client_verify() (kong.client.tls.tls static method)": [[2, "kong.client.tls.tls.set_client_verify", false]], "set_client_verify() (kong.kong.client.tls static method)": [[1, "kong.kong.client.tls.set_client_verify", false]], "set_ctx() (kong.kong.nginx static method)": [[1, "kong.kong.nginx.set_ctx", false]], "set_ctx() (kong.nginx.nginx static method)": [[5, "kong.nginx.nginx.set_ctx", false]], "set_header() (kong.kong.response static method)": [[1, "kong.kong.response.set_header", false]], "set_header() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.set_header", false]], "set_header() (kong.response.response static method)": [[1, "kong.response.response.set_header", false]], "set_header() (kong.service.request.request static method)": [[6, "kong.service.request.request.set_header", false]], "set_header() (kong.service.service.request static method)": [[6, "kong.service.service.request.set_header", false]], "set_headers() (kong.kong.response static method)": [[1, "kong.kong.response.set_headers", false]], "set_headers() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.set_headers", false]], "set_headers() (kong.response.response static method)": [[1, "kong.response.response.set_headers", false]], "set_headers() (kong.service.request.request static method)": [[6, "kong.service.request.request.set_headers", false]], "set_headers() (kong.service.service.request static method)": [[6, "kong.service.service.request.set_headers", false]], "set_method() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.set_method", false]], "set_method() (kong.service.request.request static method)": [[6, "kong.service.request.request.set_method", false]], "set_method() (kong.service.service.request static method)": [[6, "kong.service.service.request.set_method", false]], "set_path() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.set_path", false]], "set_path() (kong.service.request.request static method)": [[6, "kong.service.request.request.set_path", false]], "set_path() (kong.service.service.request static method)": [[6, "kong.service.service.request.set_path", false]], "set_query() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.set_query", false]], "set_query() (kong.service.request.request static method)": [[6, "kong.service.request.request.set_query", false]], "set_query() (kong.service.service.request static method)": [[6, "kong.service.service.request.set_query", false]], "set_raw_body() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.set_raw_body", false]], "set_raw_body() (kong.service.request.request static method)": [[6, "kong.service.request.request.set_raw_body", false]], "set_raw_body() (kong.service.service.request static method)": [[6, "kong.service.service.request.set_raw_body", false]], "set_raw_query() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.set_raw_query", false]], "set_raw_query() (kong.service.request.request static method)": [[6, "kong.service.request.request.set_raw_query", false]], "set_raw_query() (kong.service.service.request static method)": [[6, "kong.service.service.request.set_raw_query", false]], "set_retries() (kong.kong.service static method)": [[1, "kong.kong.service.set_retries", false]], "set_retries() (kong.service.service static method)": [[6, "kong.service.service.set_retries", false]], "set_scheme() (kong.kong.service.request static method)": [[1, "kong.kong.service.request.set_scheme", false]], "set_scheme() (kong.service.request.request static method)": [[6, "kong.service.request.request.set_scheme", false]], "set_scheme() (kong.service.service.request static method)": [[6, "kong.service.service.request.set_scheme", false]], "set_serialize_value() (kong.kong.log static method)": [[1, "kong.kong.log.set_serialize_value", false]], "set_serialize_value() (kong.log.log static method)": [[1, "kong.log.log.set_serialize_value", false]], "set_status() (kong.kong.response static method)": [[1, "kong.kong.response.set_status", false]], "set_status() (kong.response.response static method)": [[1, "kong.response.response.set_status", false]], "set_target() (kong.kong.service static method)": [[1, "kong.kong.service.set_target", false]], "set_target() (kong.service.service static method)": [[6, "kong.service.service.set_target", false]], "set_timeouts() (kong.kong.service static method)": [[1, "kong.kong.service.set_timeouts", false]], "set_timeouts() (kong.service.service static method)": [[6, "kong.service.service.set_timeouts", false]], "set_tls_verify() (kong.kong.service static method)": [[1, "kong.kong.service.set_tls_verify", false]], "set_tls_verify() (kong.service.service static method)": [[6, "kong.service.service.set_tls_verify", false]], "set_tls_verify_depth() (kong.kong.service static method)": [[1, "kong.kong.service.set_tls_verify_depth", false]], "set_tls_verify_depth() (kong.service.service static method)": [[6, "kong.service.service.set_tls_verify_depth", false]], "set_upstream() (kong.kong.service static method)": [[1, "kong.kong.service.set_upstream", false]], "set_upstream() (kong.service.service static method)": [[6, "kong.service.service.set_upstream", false]], "shared (class in kong.ctx.shared)": [[3, "kong.ctx.shared.shared", false]], "shared (class in kong.nginx.shared)": [[5, "kong.nginx.shared.shared", false]], "telemetry (class in kong.telemetry)": [[1, "kong.telemetry.telemetry", false]], "tls (class in kong.client.tls)": [[2, "kong.client.tls.tls", false]], "update() (kong.kong.vault static method)": [[1, "kong.kong.vault.update", false]], "update() (kong.vault.vault static method)": [[1, "kong.vault.vault.update", false]], "vault (class in kong.vault)": [[1, "kong.vault.vault", false]], "warmup() (kong.kong.vault static method)": [[1, "kong.kong.vault.warmup", false]], "warmup() (kong.vault.vault static method)": [[1, "kong.vault.vault.warmup", false]], "warn() (kong.kong.log static method)": [[1, "kong.kong.log.warn", false]], "warn() (kong.log.log static method)": [[1, "kong.log.log.warn", false]]}, "objects": {"": [[1, 0, 0, "-", "kong"]], "kong": [[2, 0, 0, "-", "client"], [1, 0, 0, "-", "cluster"], [3, 0, 0, "-", "ctx"], [4, 0, 0, "-", "enterprise_edition"], [1, 0, 0, "-", "ip"], [1, 1, 1, "", "kong"], [1, 0, 0, "-", "log"], [5, 0, 0, "-", "nginx"], [1, 0, 0, "-", "node"], [1, 0, 0, "-", "plugin"], [1, 0, 0, "-", "request"], [1, 0, 0, "-", "response"], [1, 0, 0, "-", "router"], [6, 0, 0, "-", "service"], [1, 0, 0, "-", "telemetry"], [1, 0, 0, "-", "vault"]], "kong.client": [[2, 1, 1, "", "client"], [2, 0, 0, "-", "tls"]], "kong.client.client": [[2, 2, 1, "", "authenticate"], [2, 2, 1, "", "authenticate_consumer_group_by_consumer_id"], [2, 2, 1, "", "get_consumer"], [2, 2, 1, "", "get_consumer_group"], [2, 2, 1, "", "get_consumer_groups"], [2, 2, 1, "", "get_credential"], [2, 2, 1, "", "get_forwarded_ip"], [2, 2, 1, "", "get_forwarded_port"], [2, 2, 1, "", "get_ip"], [2, 2, 1, "", "get_port"], [2, 2, 1, "", "get_protocol"], [2, 2, 1, "", "load_consumer"], [2, 2, 1, "", "set_authenticated_consumer_group"], [2, 2, 1, "", "set_authenticated_consumer_groups"], [2, 1, 1, "", "tls"]], "kong.client.client.tls": [[2, 2, 1, "", "disable_session_reuse"], [2, 2, 1, "", "get_full_client_certificate_chain"], [2, 2, 1, "", "request_client_certificate"], [2, 2, 1, "", "set_client_verify"]], "kong.client.tls": [[2, 1, 1, "", "tls"]], "kong.client.tls.tls": [[2, 2, 1, "", "disable_session_reuse"], [2, 2, 1, "", "get_full_client_certificate_chain"], [2, 2, 1, "", "request_client_certificate"], [2, 2, 1, "", "set_client_verify"]], "kong.cluster": [[1, 1, 1, "", "cluster"]], "kong.cluster.cluster": [[1, 2, 1, "", "get_id"]], "kong.ctx": [[3, 1, 1, "", "ctx"], [3, 0, 0, "-", "shared"]], "kong.ctx.ctx": [[3, 1, 1, "", "shared"]], "kong.ctx.ctx.shared": [[3, 2, 1, "", "get"], [3, 2, 1, "", "set"]], "kong.ctx.shared": [[3, 1, 1, "", "shared"]], "kong.ctx.shared.shared": [[3, 2, 1, "", "get"], [3, 2, 1, "", "set"]], "kong.enterprise_edition": [[4, 1, 1, "", "enterprise_edition"], [4, 0, 0, "-", "jwe"]], "kong.enterprise_edition.enterprise_edition": [[4, 1, 1, "", "jwe"]], "kong.enterprise_edition.enterprise_edition.jwe": [[4, 2, 1, "", "decode"], [4, 2, 1, "", "decrypt"], [4, 2, 1, "", "encrypt"]], "kong.enterprise_edition.jwe": [[4, 1, 1, "", "jwe"]], "kong.enterprise_edition.jwe.jwe": [[4, 2, 1, "", "decode"], [4, 2, 1, "", "decrypt"], [4, 2, 1, "", "encrypt"]], "kong.ip": [[1, 1, 1, "", "ip"]], "kong.ip.ip": [[1, 2, 1, "", "is_trusted"]], "kong.kong": [[1, 1, 1, "", "client"], [1, 1, 1, "", "cluster"], [1, 1, 1, "", "ctx"], [1, 1, 1, "", "enterprise_edition"], [1, 1, 1, "", "ip"], [1, 1, 1, "", "log"], [1, 1, 1, "", "nginx"], [1, 1, 1, "", "node"], [1, 1, 1, "", "plugin"], [1, 1, 1, "", "request"], [1, 1, 1, "", "response"], [1, 1, 1, "", "router"], [1, 1, 1, "", "service"], [1, 1, 1, "", "telemetry"], [1, 1, 1, "", "vault"]], "kong.kong.client": [[1, 2, 1, "", "authenticate"], [1, 2, 1, "", "authenticate_consumer_group_by_consumer_id"], [1, 2, 1, "", "get_consumer"], [1, 2, 1, "", "get_consumer_group"], [1, 2, 1, "", "get_consumer_groups"], [1, 2, 1, "", "get_credential"], [1, 2, 1, "", "get_forwarded_ip"], [1, 2, 1, "", "get_forwarded_port"], [1, 2, 1, "", "get_ip"], [1, 2, 1, "", "get_port"], [1, 2, 1, "", "get_protocol"], [1, 2, 1, "", "load_consumer"], [1, 2, 1, "", "set_authenticated_consumer_group"], [1, 2, 1, "", "set_authenticated_consumer_groups"], [1, 1, 1, "", "tls"]], "kong.kong.client.tls": [[1, 2, 1, "", "disable_session_reuse"], [1, 2, 1, "", "get_full_client_certificate_chain"], [1, 2, 1, "", "request_client_certificate"], [1, 2, 1, "", "set_client_verify"]], "kong.kong.cluster": [[1, 2, 1, "", "get_id"]], "kong.kong.ctx": [[1, 1, 1, "", "shared"]], "kong.kong.ctx.shared": [[1, 2, 1, "", "get"], [1, 2, 1, "", "set"]], "kong.kong.enterprise_edition": [[1, 1, 1, "", "jwe"]], "kong.kong.enterprise_edition.jwe": [[1, 2, 1, "", "decode"], [1, 2, 1, "", "decrypt"], [1, 2, 1, "", "encrypt"]], "kong.kong.ip": [[1, 2, 1, "", "is_trusted"]], "kong.kong.log": [[1, 2, 1, "", "alert"], [1, 2, 1, "", "crit"], [1, 2, 1, "", "debug"], [1, 2, 1, "", "deprecation"], [1, 2, 1, "", "err"], [1, 2, 1, "", "info"], [1, 2, 1, "", "notice"], [1, 2, 1, "", "serialize"], [1, 2, 1, "", "set_serialize_value"], [1, 2, 1, "", "warn"]], "kong.kong.nginx": [[1, 2, 1, "", "get_ctx"], [1, 2, 1, "", "get_statistics"], [1, 2, 1, "", "get_subsystem"], [1, 2, 1, "", "get_tls1_version_str"], [1, 2, 1, "", "get_var"], [1, 2, 1, "", "req_start_time"], [1, 2, 1, "", "set_ctx"], [1, 1, 1, "", "shared"]], "kong.kong.nginx.shared": [[1, 2, 1, "", "get"], [1, 2, 1, "", "set"]], "kong.kong.node": [[1, 2, 1, "", "get_hostname"], [1, 2, 1, "", "get_id"], [1, 2, 1, "", "get_memory_stats"]], "kong.kong.plugin": [[1, 2, 1, "", "get_id"]], "kong.kong.request": [[1, 2, 1, "", "get_body"], [1, 2, 1, "", "get_forwarded_host"], [1, 2, 1, "", "get_forwarded_path"], [1, 2, 1, "", "get_forwarded_port"], [1, 2, 1, "", "get_forwarded_prefix"], [1, 2, 1, "", "get_forwarded_scheme"], [1, 2, 1, "", "get_header"], [1, 2, 1, "", "get_headers"], [1, 2, 1, "", "get_host"], [1, 2, 1, "", "get_http_version"], [1, 2, 1, "", "get_method"], [1, 2, 1, "", "get_path"], [1, 2, 1, "", "get_path_with_query"], [1, 2, 1, "", "get_port"], [1, 2, 1, "", "get_query"], [1, 2, 1, "", "get_query_arg"], [1, 2, 1, "", "get_raw_body"], [1, 2, 1, "", "get_raw_path"], [1, 2, 1, "", "get_raw_query"], [1, 2, 1, "", "get_scheme"], [1, 2, 1, "", "get_start_time"], [1, 2, 1, "", "get_uri_captures"]], "kong.kong.response": [[1, 2, 1, "", "add_header"], [1, 2, 1, "", "clear_header"], [1, 2, 1, "", "error"], [1, 2, 1, "", "exit"], [1, 2, 1, "", "get_header"], [1, 2, 1, "", "get_headers"], [1, 2, 1, "", "get_source"], [1, 2, 1, "", "get_status"], [1, 2, 1, "", "set_header"], [1, 2, 1, "", "set_headers"], [1, 2, 1, "", "set_status"]], "kong.kong.router": [[1, 2, 1, "", "get_route"], [1, 2, 1, "", "get_service"]], "kong.kong.service": [[1, 1, 1, "", "request"], [1, 1, 1, "", "response"], [1, 2, 1, "", "set_retries"], [1, 2, 1, "", "set_target"], [1, 2, 1, "", "set_timeouts"], [1, 2, 1, "", "set_tls_verify"], [1, 2, 1, "", "set_tls_verify_depth"], [1, 2, 1, "", "set_upstream"]], "kong.kong.service.request": [[1, 2, 1, "", "add_header"], [1, 2, 1, "", "clear_header"], [1, 2, 1, "", "disable_tls"], [1, 2, 1, "", "enable_buffering"], [1, 2, 1, "", "set_body"], [1, 2, 1, "", "set_header"], [1, 2, 1, "", "set_headers"], [1, 2, 1, "", "set_method"], [1, 2, 1, "", "set_path"], [1, 2, 1, "", "set_query"], [1, 2, 1, "", "set_raw_body"], [1, 2, 1, "", "set_raw_query"], [1, 2, 1, "", "set_scheme"]], "kong.kong.service.response": [[1, 2, 1, "", "get_body"], [1, 2, 1, "", "get_header"], [1, 2, 1, "", "get_headers"], [1, 2, 1, "", "get_raw_body"], [1, 2, 1, "", "get_status"]], "kong.kong.telemetry": [[1, 2, 1, "", "log"]], "kong.kong.vault": [[1, 2, 1, "", "flush"], [1, 2, 1, "", "get"], [1, 2, 1, "", "init_worker"], [1, 2, 1, "", "is_reference"], [1, 2, 1, "", "parse_reference"], [1, 2, 1, "", "update"], [1, 2, 1, "", "warmup"]], "kong.log": [[1, 1, 1, "", "log"]], "kong.log.log": [[1, 2, 1, "", "alert"], [1, 2, 1, "", "crit"], [1, 2, 1, "", "debug"], [1, 2, 1, "", "deprecation"], [1, 2, 1, "", "err"], [1, 2, 1, "", "info"], [1, 2, 1, "", "notice"], [1, 2, 1, "", "serialize"], [1, 2, 1, "", "set_serialize_value"], [1, 2, 1, "", "warn"]], "kong.nginx": [[5, 1, 1, "", "nginx"], [5, 0, 0, "-", "shared"]], "kong.nginx.nginx": [[5, 2, 1, "", "get_ctx"], [5, 2, 1, "", "get_statistics"], [5, 2, 1, "", "get_subsystem"], [5, 2, 1, "", "get_tls1_version_str"], [5, 2, 1, "", "get_var"], [5, 2, 1, "", "req_start_time"], [5, 2, 1, "", "set_ctx"], [5, 1, 1, "", "shared"]], "kong.nginx.nginx.shared": [[5, 2, 1, "", "get"], [5, 2, 1, "", "set"]], "kong.nginx.shared": [[5, 1, 1, "", "shared"]], "kong.nginx.shared.shared": [[5, 2, 1, "", "get"], [5, 2, 1, "", "set"]], "kong.node": [[1, 1, 1, "", "node"]], "kong.node.node": [[1, 2, 1, "", "get_hostname"], [1, 2, 1, "", "get_id"], [1, 2, 1, "", "get_memory_stats"]], "kong.plugin": [[1, 1, 1, "", "plugin"]], "kong.plugin.plugin": [[1, 2, 1, "", "get_id"]], "kong.request": [[1, 1, 1, "", "request"]], "kong.request.request": [[1, 2, 1, "", "get_body"], [1, 2, 1, "", "get_forwarded_host"], [1, 2, 1, "", "get_forwarded_path"], [1, 2, 1, "", "get_forwarded_port"], [1, 2, 1, "", "get_forwarded_prefix"], [1, 2, 1, "", "get_forwarded_scheme"], [1, 2, 1, "", "get_header"], [1, 2, 1, "", "get_headers"], [1, 2, 1, "", "get_host"], [1, 2, 1, "", "get_http_version"], [1, 2, 1, "", "get_method"], [1, 2, 1, "", "get_path"], [1, 2, 1, "", "get_path_with_query"], [1, 2, 1, "", "get_port"], [1, 2, 1, "", "get_query"], [1, 2, 1, "", "get_query_arg"], [1, 2, 1, "", "get_raw_body"], [1, 2, 1, "", "get_raw_path"], [1, 2, 1, "", "get_raw_query"], [1, 2, 1, "", "get_scheme"], [1, 2, 1, "", "get_start_time"], [1, 2, 1, "", "get_uri_captures"]], "kong.response": [[1, 1, 1, "", "response"]], "kong.response.response": [[1, 2, 1, "", "add_header"], [1, 2, 1, "", "clear_header"], [1, 2, 1, "", "error"], [1, 2, 1, "", "exit"], [1, 2, 1, "", "get_header"], [1, 2, 1, "", "get_headers"], [1, 2, 1, "", "get_source"], [1, 2, 1, "", "get_status"], [1, 2, 1, "", "set_header"], [1, 2, 1, "", "set_headers"], [1, 2, 1, "", "set_status"]], "kong.router": [[1, 1, 1, "", "router"]], "kong.router.router": [[1, 2, 1, "", "get_route"], [1, 2, 1, "", "get_service"]], "kong.service": [[6, 0, 0, "-", "request"], [6, 0, 0, "-", "response"], [6, 1, 1, "", "service"]], "kong.service.request": [[6, 1, 1, "", "request"]], "kong.service.request.request": [[6, 2, 1, "", "add_header"], [6, 2, 1, "", "clear_header"], [6, 2, 1, "", "disable_tls"], [6, 2, 1, "", "enable_buffering"], [6, 2, 1, "", "set_body"], [6, 2, 1, "", "set_header"], [6, 2, 1, "", "set_headers"], [6, 2, 1, "", "set_method"], [6, 2, 1, "", "set_path"], [6, 2, 1, "", "set_query"], [6, 2, 1, "", "set_raw_body"], [6, 2, 1, "", "set_raw_query"], [6, 2, 1, "", "set_scheme"]], "kong.service.response": [[6, 1, 1, "", "response"]], "kong.service.response.response": [[6, 2, 1, "", "get_body"], [6, 2, 1, "", "get_header"], [6, 2, 1, "", "get_headers"], [6, 2, 1, "", "get_raw_body"], [6, 2, 1, "", "get_status"]], "kong.service.service": [[6, 1, 1, "", "request"], [6, 1, 1, "", "response"], [6, 2, 1, "", "set_retries"], [6, 2, 1, "", "set_target"], [6, 2, 1, "", "set_timeouts"], [6, 2, 1, "", "set_tls_verify"], [6, 2, 1, "", "set_tls_verify_depth"], [6, 2, 1, "", "set_upstream"]], "kong.service.service.request": [[6, 2, 1, "", "add_header"], [6, 2, 1, "", "clear_header"], [6, 2, 1, "", "disable_tls"], [6, 2, 1, "", "enable_buffering"], [6, 2, 1, "", "set_body"], [6, 2, 1, "", "set_header"], [6, 2, 1, "", "set_headers"], [6, 2, 1, "", "set_method"], [6, 2, 1, "", "set_path"], [6, 2, 1, "", "set_query"], [6, 2, 1, "", "set_raw_body"], [6, 2, 1, "", "set_raw_query"], [6, 2, 1, "", "set_scheme"]], "kong.service.service.response": [[6, 2, 1, "", "get_body"], [6, 2, 1, "", "get_header"], [6, 2, 1, "", "get_headers"], [6, 2, 1, "", "get_raw_body"], [6, 2, 1, "", "get_status"]], "kong.telemetry": [[1, 1, 1, "", "telemetry"]], "kong.telemetry.telemetry": [[1, 2, 1, "", "log"]], "kong.vault": [[1, 1, 1, "", "vault"]], "kong.vault.vault": [[1, 2, 1, "", "flush"], [1, 2, 1, "", "get"], [1, 2, 1, "", "init_worker"], [1, 2, 1, "", "is_reference"], [1, 2, 1, "", "parse_reference"], [1, 2, 1, "", "update"], [1, 2, 1, "", "warmup"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "terms": {"": [1, 2, 3, 5, 6], "0": [1, 2, 6], "07": 1, "09": 1, "1": [1, 2, 4, 6], "10": [1, 2], "100": [1, 6], "1000": [1, 6], "10c4": [1, 2], "1102": 1, "12": 1, "12288": 1, "1234": [1, 2], "123e4567": 1, "123\u00f8": 1, "127": [1, 2], "12d3": 1, "130": [1, 6], "1649960273000": 1, "168": [1, 6], "18004": 1, "18005": 1, "19": 1, "192": [1, 6], "2": [1, 4, 6], "20": 1, "200": 1, "20000": [1, 2], "20123": 1, "2017": 1, "20world": [1, 6], "2147483646": [1, 6], "233": [1, 6], "24": 1, "24576": 1, "25": 1, "256": [1, 4], "25932": 1, "2f": 1, "3": [1, 4, 6], "30000": [1, 2], "32767": [1, 6], "36": 1, "384": [1, 4], "3986": 1, "399": 1, "4": [1, 4], "400": 1, "40000": [1, 2], "401": [1, 6], "403": 1, "404": 1, "404e": [1, 2], "418": [1, 6], "42": [1, 6], "426614174000": 1, "443": [1, 6], "46d5": [1, 2], "4etl6srw2yilurn5vfvvhuhp7x8pxltmwwlbbm4ifym": [1, 4], "4zriopihli3lexy": [1, 4], "5": [1, 4], "500": 1, "502": 1, "503": 1, "521": [1, 4], "54": 1, "6": 1, "7239": 1, "736bb9d9": [1, 2], "8": [1, 6], "80": [1, 2, 6], "870mb6gfutj4htunuvymyjpr5euznp4bk43bvdj3ea": [1, 4], "8d45": [1, 2], "92f6q": [1, 4], "97fc": [1, 2], "98f2": [1, 2], "A": [1, 4, 6], "And": 1, "As": 1, "Be": 1, "By": [1, 2, 6], "For": [1, 6], "If": [1, 2, 4, 6], "In": 1, "It": 1, "No": 1, "On": 1, "That": [1, 2], "The": [1, 2, 4, 5, 6], "There": 1, "To": [1, 2, 6], "Will": [1, 6], "_": [1, 6], "__tostr": 1, "_and_": 1, "_not_": 1, "a256gcm": [1, 4], "a2b0f521464d": [1, 2], "a456": 1, "aad": [1, 4], "abc": 1, "about": 1, "abov": [1, 6], "accept": [1, 2, 5, 6], "access": [1, 2, 6], "accord": [1, 6], "accordingli": [1, 6], "acl": 1, "action": 1, "activ": [1, 5], "actual": [1, 6], "ad": [1, 4, 6], "add": [1, 2, 6], "add_head": [1, 6, 7], "addition": [1, 6], "address": [1, 2, 6], "admin_api": 1, "affect": [1, 6], "after": 1, "ag": [1, 6], "against": 1, "agreement": [1, 4], "alert": [1, 7], "alg": [1, 4], "algorithm": [1, 4], "all": [1, 6], "allocated_slab": 1, "allow": [1, 6], "allow_termin": [1, 2], "along": 1, "alreadi": [1, 2, 6], "also": [1, 4, 6], "alt": 1, "alwai": [1, 2, 6], "an": [1, 2, 6], "ani": [1, 2, 3, 4, 5, 6], "anoth": [1, 6], "answer": [1, 2], "anyth": [1, 2, 6], "api": [1, 6], "appear": [1, 4], "applic": [1, 6], "appropri": [1, 6], "apu": [1, 4], "apv": [1, 4], "ar": [1, 2, 5, 6], "arg": [1, 6], "argument": [1, 2, 4, 6], "arrai": [1, 6], "ask": [1, 6], "assert": 1, "associ": [1, 6], "assum": [1, 2], "attack": 1, "attent": 1, "attribut": 1, "auth": [1, 2], "auth_and_lat": [1, 2], "authent": [1, 2, 4, 6], "authenticate_consumer_group_by_consumer_id": [1, 2], "author": 1, "auto": [1, 4], "automat": 1, "avail": 1, "aw": 1, "awar": 1, "b": 1, "b8": 1, "back": [1, 5], "bad": 1, "balanc": [1, 2, 6], "bar": [1, 6], "bar1": [1, 6], "base": [1, 2, 3, 4, 5, 6], "base64url": [1, 4], "basic": 1, "baz": [1, 6], "bear": [1, 6], "becom": [1, 2], "been": [1, 2, 5, 6], "befor": [1, 4], "begin": 1, "behav": 1, "behavior": [1, 2, 6], "behind": 1, "being": [1, 2, 4], "belong": 1, "better": 1, "between": [1, 2, 6], "bla": [1, 6], "blo": [1, 6], "blob": [1, 2], "bodi": [1, 6], "body_filt": [1, 2, 6], "boo": [1, 6], "bool": [1, 2, 6], "boolean": [1, 4, 6], "both": [1, 2], "bottom": [1, 2], "break": 1, "buffer": [1, 6], "byte": [1, 4, 6], "c3": 1, "ca": [1, 2], "ca_cert": [1, 2], "cach": [1, 6], "cache_kei": [1, 2], "call": [1, 6], "caller": 1, "can": [1, 2, 4, 6], "cannot": [1, 6], "capac": 1, "captur": 1, "capturesfor": 1, "case": [1, 2, 6], "categor": 1, "cdata": [1, 2], "cert": [1, 2], "cert_alt": 1, "certif": [1, 2, 6], "chain": [1, 2], "chain_lib": [1, 2], "chanc": 1, "chang": [1, 2], "charact": [1, 6], "check": [1, 2, 6], "chosen": [1, 6], "ciphertext": [1, 4], "circuit": 1, "class": [1, 2, 3, 4, 5, 6], "clear": [1, 2], "clear_head": [1, 6, 7], "client": [1, 5, 6, 7], "client_body_buffer_s": 1, "client_verifi": [1, 2], "cluster": 7, "code": [1, 2, 6], "com": [1, 2], "come": 1, "comparis": 1, "complet": [1, 2], "compon": [1, 6], "concat": [1, 4], "concaten": 1, "conf": 1, "config": 1, "configur": [1, 2, 6], "conform": 1, "conjunct": 1, "connect": [1, 2, 5, 6], "connect_timeout": [1, 6], "connections_accept": [1, 5], "connections_act": [1, 5], "connections_handl": [1, 5], "connections_read": [1, 5], "connections_wait": [1, 5], "connections_writ": [1, 5], "consid": [1, 2, 6], "consist": 1, "consolid": 1, "consum": [1, 2], "consumer_group_map": [1, 2], "consumer_id": [1, 2], "contact": 1, "contain": [1, 4, 6], "content": 7, "context": [1, 3, 5], "control": [1, 6], "conveni": 1, "convers": 1, "convert": [1, 6], "copi": [1, 6], "core": [1, 2], "correspond": [1, 6], "could": [1, 6], "count": [1, 6], "creat": [1, 2, 6], "credenti": [1, 2], "crit": [1, 7], "crv": [1, 4], "ctx": [1, 2, 5, 7], "current": [1, 2, 5, 6], "curv": [1, 4], "custom": [1, 6], "d": [1, 4], "d7361d9488ee": [1, 2], "dash": [1, 6], "data": [1, 2, 3, 5, 6], "databas": 1, "datastor": [1, 2], "db": 1, "dbless": 1, "deactiv": 1, "deal": [1, 2], "debug": [1, 7], "decim": 1, "decod": [1, 4, 6], "decrypt": [1, 4], "def": [1, 4], "default": [1, 2, 4, 6], "defens": 1, "defer": 1, "defin": 1, "deflat": [1, 4], "delet": [1, 6], "depend": [1, 2], "deploy": 1, "deprec": [1, 2, 7], "depth": [1, 6], "der": [1, 4], "dereferenc": 1, "describ": [1, 6], "desir": [1, 6], "determin": 1, "determinist": [1, 2], "did": [1, 2], "differ": 1, "digit": 1, "direct": [1, 6], "directli": [1, 2], "disabl": [1, 2, 6], "disable_session_reus": [1, 2], "disable_tl": [1, 6], "disk": 1, "distinguish": [1, 2], "dn": [1, 2], "do": [1, 2, 6], "doc": [1, 2, 5, 6], "doe": [1, 2, 6], "doesn": [1, 2, 6], "done": 1, "dot": 1, "downstream": [1, 2], "duplic": 1, "dure": 1, "e": [1, 2, 4, 6], "e89b": 1, "each": [1, 2, 6], "earli": 1, "earth": 1, "ec": [1, 4], "ecdh": [1, 4], "effect": [1, 6], "either": [1, 6], "element": 1, "els": [1, 2], "elseif": 1, "empti": [1, 6], "en": [1, 2, 5, 6], "enabl": [1, 6], "enable_buff": [1, 6], "enc": [1, 4], "encod": [1, 2, 6], "encrypt": [1, 4], "encrypted_kei": [1, 4], "end": [1, 4], "enterprise_edit": [1, 7], "entiti": [1, 2, 6], "entri": [1, 6], "env": 1, "ephemer": [1, 4], "epoch": 1, "equal": [1, 6], "equival": [1, 6], "err": [1, 2, 4, 6, 7], "errif": [1, 2], "erron": [1, 2], "error": [1, 2, 4, 6, 7], "errorif": 1, "escap": [1, 6], "etc": 1, "even": [1, 2], "event": 1, "exactli": [1, 4], "exampl": [1, 2, 5, 6], "execut": 1, "exist": [1, 2, 6], "exit": [1, 7], "expect": [1, 6], "experiment": 1, "explain": 1, "explicitli": [1, 2], "expos": [1, 5], "extens": 1, "extern": [1, 2], "eyjhbgcioijfq0riluvtiiwizw5jijoiqti1nkddtsisimfwdsi6ik1lufhus2oywfr1nuktyldusfi2bxci": [1, 4], "fail": [1, 2, 4, 6], "failur": [1, 2], "fals": [1, 4, 6], "favor": [1, 2], "fed2bf38": [1, 2], "fffonion": [1, 2], "field": [1, 2, 5], "file": 1, "filesystem": 1, "find": [1, 2], "first": [1, 6], "fit": 1, "flag": [1, 6], "flow": 1, "flush": [1, 7], "follow": [1, 5, 6], "foo": [1, 6], "foo1": [1, 6], "foo2": [1, 6], "foo3": [1, 6], "forbidden": 1, "form": [1, 6], "format": [1, 4, 6], "forward": [1, 2], "found": [1, 2, 6], "from": [1, 2, 3, 4, 5, 6], "front": [1, 2], "function": [1, 2, 4, 6], "further": [1, 6], "futur": [1, 2], "g": [1, 2, 6], "gatewai": [1, 2], "gener": [1, 2, 4, 6], "get": [1, 3, 5, 6, 7], "get_al": 1, "get_bodi": [1, 6, 7], "get_consum": [1, 2], "get_consumer_group": [1, 2], "get_credenti": [1, 2], "get_ctx": [1, 5], "get_forwarded_host": [1, 7], "get_forwarded_ip": [1, 2], "get_forwarded_path": [1, 7], "get_forwarded_port": [1, 2, 7], "get_forwarded_prefix": [1, 7], "get_forwarded_schem": [1, 7], "get_full_client_certificate_chain": [1, 2], "get_head": [1, 6, 7], "get_host": [1, 7], "get_hostnam": [1, 7], "get_http_vers": [1, 7], "get_id": [1, 7], "get_ip": [1, 2], "get_memory_stat": [1, 7], "get_method": [1, 7], "get_path": [1, 7], "get_path_with_queri": [1, 7], "get_port": [1, 2, 7], "get_protocol": [1, 2], "get_queri": [1, 7], "get_query_arg": [1, 7], "get_raw_bodi": [1, 6, 7], "get_raw_path": [1, 7], "get_raw_queri": [1, 7], "get_rout": [1, 7], "get_schem": [1, 7], "get_servic": [1, 7], "get_sourc": [1, 6, 7], "get_start_tim": [1, 7], "get_statist": [1, 5], "get_statu": [1, 6, 7], "get_subsystem": [1, 5], "get_tls1_version_str": [1, 5], "get_uri_captur": [1, 7], "get_var": [1, 5], "gibibyt": 1, "github": [1, 2], "given": [1, 2, 4, 6], "greater": [1, 6], "group": [1, 2], "grpc": 1, "gsub": 1, "ha": [1, 2, 6], "handl": [1, 5, 6], "handler": 1, "handshak": [1, 2, 6], "happen": [1, 2], "have": [1, 2, 5], "head": [1, 6], "header": [1, 2, 4, 5, 6], "header_filt": [1, 2, 6], "health": [1, 6], "hello": [1, 4, 6], "help": 1, "helper": 1, "here": [1, 6], "hexidecim": 1, "high": 1, "higher": [1, 6], "hint": [1, 2], "hold": [1, 6], "honor": [1, 2], "host": [1, 6], "hostnam": [1, 6], "howev": [1, 2], "html": [1, 2, 5, 6], "http": [1, 2, 5, 6], "http_allocated_gc": 1, "http_method": 1, "hybrid": 1, "i": [1, 2, 4, 5, 6], "id": [1, 2], "ident": 1, "identifi": 1, "idl": [1, 5], "idx": 1, "ignor": [1, 6], "immedi": 1, "implic": 1, "includ": [1, 5, 6], "index": 0, "indic": [1, 6], "info": [1, 7], "inform": 1, "init_work": [1, 7], "initi": [1, 2, 4], "input": [1, 4, 6], "insecur": 1, "insensit": [1, 6], "insid": [1, 2], "inspect": [1, 6], "instanc": 1, "instead": [1, 2, 6], "integ": [1, 6], "intermedi": [1, 2], "intern": 1, "interpret": 1, "interrupt": 1, "invalid": [1, 6], "invok": 1, "ip": [2, 6, 7], "ipair": 1, "ipv4": 1, "ipv6": 1, "is_refer": [1, 7], "is_trust": [1, 7], "issuer": [1, 6], "item": [1, 2], "iter": [1, 6], "its": [1, 2], "itself": [1, 6], "iv": [1, 4], "john": [1, 6], "john_do": [1, 2], "json": [1, 4, 6], "jwe": [1, 7], "jwk": [1, 4], "jwt": [1, 4], "k": [1, 3, 5], "ke4ofa": [1, 4], "kei": [1, 3, 4, 5, 6], "key_alt": 1, "kib": 1, "kibibyt": 1, "kml5nia": [1, 4], "known": [1, 6], "kong_db_cach": 1, "konghq": [1, 2], "kongserviceset_tls_verifi": [1, 6], "kongserviceset_upstream_ssl_trusted_stor": [1, 6], "kty": [1, 4], "l4": 1, "larger": 1, "last": 1, "later": [1, 2], "latest": [1, 2], "latter": 1, "lcj4ijoiwwd3ef9nvxrltw9nyupnzxfhsjzjufv1z29oykvvc0i1nndrrlpyrjvmncisinkioiixaeyzyzlr": [1, 4], "lcjhchyioijmuhfoa2hfnkdjvfd1sg5ywfzbclvniiwizxbrijp7imt0esi6ikvdiiwiy3j2ijoiuc0yntyi": [1, 4], "lead": [1, 6], "least": [1, 2], "leav": 1, "left": [1, 6], "length": [1, 6], "less": 1, "let": 1, "level": [1, 6], "lexicograph": [1, 6], "lib": [1, 2], "like": [1, 2, 4], "limit": [1, 5, 6], "line": 1, "list": [1, 2], "listen": 1, "load": [1, 2, 6], "load_consum": [1, 2], "local": [1, 4, 6], "localhost": 1, "lock": [1, 6], "log": [2, 6, 7], "look": [1, 2, 4], "lookup": [1, 2], "lowercas": [1, 6], "lru": 1, "lua": [1, 2, 6], "lua_max_post_arg": 1, "lua_max_req_head": 1, "lua_max_resp_head": 1, "lua_max_uri_arg": 1, "lua_shared_dict": 1, "lua_transform_underscores_in_response_head": 1, "m": 1, "machin": 1, "mai": 1, "make": [1, 2, 6], "manag": [1, 4], "manual": [1, 6], "map": 1, "mar": 1, "master": [1, 2], "match": [1, 2, 6], "max": 1, "max_allowed_file_s": 1, "max_arg": [1, 6], "max_head": [1, 6], "maximum": [1, 6], "md": [1, 2], "mean": [1, 6], "mebibyt": 1, "memori": [1, 3, 5], "messag": [1, 2, 4, 6], "message_typ": 1, "metadata": [1, 2], "metamethod": 1, "metat": 1, "method": [1, 6], "metric": [1, 5], "mi5lt": [1, 4], "might": [1, 2, 6], "millisecond": 1, "mime": [1, 6], "mimetyp": [1, 6], "mkbctnickusdii11yss3526idz8aito7tu6kpaqv7d4": [1, 4], "mkcol": [1, 6], "mode": 1, "modifi": 1, "modul": [0, 7], "more": [1, 6], "most": 1, "move": [1, 6], "movi": [1, 2, 6], "msg": 1, "mtl": [1, 2], "multipart": [1, 6], "multipl": [1, 6], "must": [1, 2, 6], "mutual": [1, 2], "my": [1, 2], "my_new_valu": 1, "my_plugin": 1, "name": [1, 2, 5, 6], "namespac": 1, "necessari": [1, 6], "need": [1, 6], "neg": [1, 6], "neither": [1, 2], "new": [1, 2], "new_valu": 1, "nginx": [1, 2, 6, 7], "nginx_http_lua_transform_underscores_in_response_head": 1, "nginx_statist": [1, 5], "ngx": [1, 2, 3, 5], "ngx_core_modul": [1, 5], "ngx_http_proxy_modul": [1, 6], "ngx_http_realip_modul": 1, "ngx_http_ssl_modul": [1, 2], "ngx_http_stub_status_modul": [1, 5], "ngx_stream_proxy_modul": [1, 6], "nil": [1, 2, 4, 6], "node": 7, "non": [1, 6], "none": [1, 2, 3, 4, 5, 6], "nor": [1, 2], "normal": [1, 6], "note": [1, 2, 6], "noth": 1, "notic": [1, 7], "number": [1, 2, 5, 6], "oaep": [1, 4], "object": [1, 2, 3, 4, 5, 6], "obtain": 1, "occur": [1, 2, 6], "occurr": [1, 6], "off": [1, 6], "offer": 1, "ok": [1, 6], "omit": [1, 2], "onc": [1, 6], "one": [1, 2, 6], "onli": [1, 2, 6], "onward": [1, 6], "opaqu": [1, 2], "openresti": [1, 2], "openssl": [1, 2], "opensslx509": [1, 2], "opentelemetri": 1, "oper": [1, 6], "operand": [1, 6], "option": [1, 2, 4, 6], "order": [1, 6], "org": [1, 2, 5, 6], "origin": [1, 4], "other": [1, 2, 6], "otherwis": [1, 2, 6], "out": [1, 2], "output": [1, 4], "over": 1, "overrid": [1, 2, 6], "overridden": [1, 6], "overwrit": [1, 6], "own": 1, "p": [1, 4], "packag": 7, "page": 0, "pair": [1, 3, 5, 6], "param": 1, "paramet": [1, 2, 3, 4, 5, 6], "parent": 1, "pars": [1, 6], "parse_pem_cert": [1, 2], "parse_refer": [1, 7], "part": [1, 4], "partyuinfo": [1, 4], "partyvinfo": [1, 4], "pass": 1, "password": [1, 2], "patch": [1, 6], "path": [1, 6], "payload": [1, 4], "pem": [1, 2, 4], "pem_cert": [1, 2], "per": [1, 3, 5], "percent": 1, "perform": [1, 2, 6], "phase": [1, 2, 6], "pid": 1, "plain": 1, "plaintext": [1, 4], "plane": 1, "plugin": [6, 7], "plugin_config": 1, "plugin_nam": 1, "point": 1, "pointer": [1, 2], "port": [1, 2, 6], "port_map": 1, "possibl": [1, 6], "post": [1, 6], "potenti": 1, "preced": 1, "prefer": 1, "prefix": 1, "preread": [1, 6], "present": [1, 2, 6], "prevent": [1, 2, 4], "primarili": 1, "print": [1, 4], "prior": [1, 6], "privat": [1, 4], "process": [1, 2, 6], "prod": [1, 6], "produc": [1, 6], "program": 1, "properti": [1, 6], "propfind": [1, 6], "proppatch": [1, 6], "protect": [1, 4], "proto": [1, 2], "protocol": [1, 2, 6], "provid": [1, 2, 6], "proxi": [1, 6], "proxy_protocol": [1, 2], "proxy_ssl": [1, 6], "proxy_ssl_trusted_certif": [1, 6], "proxy_ssl_verifi": [1, 6], "public": [1, 4], "purpos": 1, "put": [1, 6], "queri": [1, 6], "querystr": [1, 6], "random": [1, 4], "rate": 1, "raw": [1, 2, 6], "re": [1, 2, 6], "reach": [1, 5], "read": [1, 5], "read_timeout": [1, 6], "real": 1, "real_ip_head": [1, 2], "real_ip_recurs": [1, 2], "reason": [1, 2], "receiv": [1, 6], "recept": 1, "recommend": 1, "reconstruct": [1, 4], "record": 1, "recur": 1, "recurs": 1, "redi": [1, 2], "ref": 1, "refer": [1, 2], "reflect": 1, "regard": 1, "regist": 1, "reject": [1, 6], "rel": 1, "releas": [1, 2], "reli": 1, "remain": [1, 6], "remot": [1, 2], "remov": [1, 6], "replac": 1, "report": [1, 5], "repres": 1, "represent": 1, "req_start_tim": [1, 5], "request": [2, 3, 5, 7], "request_client_certif": [1, 2], "requir": [1, 2, 4], "reserv": 1, "resolv": 1, "resourc": [1, 5], "respect": 1, "respons": [2, 5, 7], "resti": [1, 2], "restyopensslx509chain": [1, 2], "result": [1, 2, 6], "retain": [1, 6], "retri": [1, 6], "retriev": [1, 2, 6], "return": [1, 2, 3, 4, 5, 6], "reus": [1, 2], "revers": 1, "rewrit": [1, 2, 6], "rfc": [1, 6], "right": [1, 2], "rotat": 1, "rout": [1, 2], "router": 7, "rsa": [1, 4], "rule": 1, "run": [1, 6], "same": [1, 2, 5, 6], "scale": 1, "scan": [1, 2], "schedul": 1, "scheme": [1, 6], "search": [0, 1, 2], "search_by_usernam": [1, 2], "second": [1, 2], "secret": 1, "section": 1, "see": [1, 6], "seen": 1, "send": [1, 2], "sent": [1, 2, 6], "sequenc": [1, 2], "serial": [1, 2, 7], "serv": 1, "server": [1, 2, 6], "servic": [1, 2, 7], "session": [1, 2, 6], "set": [1, 2, 3, 4, 5, 6], "set_authenticated_consumer_group": [1, 2], "set_bodi": [1, 6], "set_client_verifi": [1, 2], "set_ctx": [1, 5], "set_head": [1, 6, 7], "set_method": [1, 6], "set_path": [1, 6], "set_queri": [1, 6], "set_raw_bodi": [1, 6], "set_raw_queri": [1, 6], "set_retri": [1, 6], "set_schem": [1, 6], "set_serialize_valu": [1, 7], "set_statu": [1, 7], "set_target": [1, 6], "set_timeout": [1, 6], "set_tls_verifi": [1, 6], "set_tls_verify_depth": [1, 6], "set_upstream": [1, 6], "set_upstream_ssl_trusted_stor": [1, 6], "sever": [1, 2, 6], "share": [1, 7], "short": 1, "should": [1, 2, 6], "side": [1, 2], "similar": [1, 5], "similarli": 1, "sinc": [1, 6], "sixteen": [1, 4], "size": 1, "slash": 1, "sni": [1, 6], "so": 1, "some": [1, 2, 5], "some_fil": 1, "someth": [1, 2, 6], "sort": [1, 2], "sourc": [1, 2, 3, 4, 5, 6], "special": [1, 6], "specifi": [1, 6], "ssl": [1, 2], "ssl_": 1, "ssl_client_verifi": [1, 2], "stack": 1, "stack_of": [1, 2], "start": [1, 2, 5], "static": [1, 2, 3, 4, 5, 6], "statist": [1, 5], "statu": [1, 6], "step": [1, 6], "still": [1, 2], "store": [1, 6], "str": [1, 2, 3, 4, 5, 6], "strategi": 1, "stream": [1, 6], "string": [1, 2, 4, 5, 6], "stringifi": 1, "strip": 1, "structur": 1, "submodul": 7, "subpackag": 7, "subsequ": 1, "subset": [1, 2], "subsystem": [1, 5], "succeed": [1, 6], "success": [1, 2, 6], "successfulli": 1, "suffix": 1, "support": [1, 4, 6], "t": [1, 2, 6], "tabl": [1, 2, 4, 5, 6], "tag": [1, 4], "take": 1, "target": [1, 6], "tcp": [1, 2], "telemetri": 7, "temporari": 1, "test": 1, "text": 1, "than": [1, 6], "thei": 1, "them": [1, 2, 4], "thi": [1, 2, 4, 6], "third": 1, "thorough": 1, "those": [1, 5, 6], "three": 1, "through": [1, 2], "throw": [1, 2, 6], "thu": 1, "ticket": [1, 2], "time": [1, 6], "timeout": [1, 6], "timer": 1, "timestamp": [1, 5], "tl": [1, 6, 7], "tlsv1": [1, 5], "token": [1, 4], "top": [1, 2], "tostr": 1, "total": [1, 5], "total_request": [1, 5], "trace": [1, 6], "tradit": 1, "transfer": 1, "transform": 1, "translat": 1, "travers": 1, "true": [1, 2, 6], "truncat": [1, 6], "trust": [1, 2, 6], "trusted_ip": [1, 2], "truthi": [1, 2], "ttl": 1, "tupl": [1, 2, 4, 6], "twm": [1, 4], "two": 1, "type": [1, 2, 3, 4, 5, 6], "typic": 1, "unabl": [1, 6], "unam": 1, "unavail": 1, "unchang": [1, 6], "underscor": [1, 6], "unescap": 1, "uniqu": 1, "unit": 1, "unix": 1, "unknown": [1, 2], "unless": [1, 5], "unlik": [1, 2, 6], "unlock": [1, 6], "unnam": 1, "unrecogn": 1, "unreserv": 1, "unset": 1, "unspecifi": [1, 6], "up": [1, 2, 6], "updat": [1, 7], "upon": 1, "uppercas": [1, 6], "upstream": [1, 6], "uri": [1, 6], "url": [1, 6], "urlencod": [1, 6], "us": [1, 2, 4, 6], "usag": [1, 4], "usernam": [1, 2], "utf": [1, 6], "uuid": 1, "v": [1, 3, 5], "v1": [1, 2], "v2": [1, 6], "v4": 1, "valid": [1, 6], "valu": [1, 2, 3, 5, 6], "var_ssl_client_verifi": [1, 2], "variabl": [1, 2, 5], "variou": [1, 5], "vault": 7, "vector": [1, 4], "vehelvozam1vyup2thzwtgjqcvnasw9knmd4x2ytuzatz21rin19": [1, 4], "verif": [1, 2, 6], "version": [1, 5], "via": [1, 6], "visibl": 1, "vulner": 1, "wa": [1, 2, 6], "wai": [1, 6], "wait": [1, 5], "want": 1, "warmup": [1, 7], "warn": [1, 7], "we": 1, "well": [1, 2], "were": 1, "what": [1, 6], "when": [1, 2, 6], "where": [1, 5, 6], "whether": [1, 2, 4, 6], "which": [1, 2, 6], "while": [1, 2, 6], "wide": 1, "within": [1, 6], "without": [1, 2, 6], "worker_connect": [1, 5], "workers_lua_vm": 1, "world": [1, 6], "would": [1, 6], "write": [1, 5], "write_timeout": [1, 6], "written": [1, 6], "www": [1, 6], "x": [1, 2, 4, 6], "x509": [1, 2], "x509_lib": [1, 2], "x_anoth": [1, 6], "x_custom_head": [1, 6], "xml": 1, "y": [1, 4], "yet": [1, 2], "you": [1, 6], "zip": [1, 4], "zzz": [1, 6]}, "titles": ["Welcome to kong-pdk\u2019s documentation!", "kong package", "kong.client package", "kong.ctx package", "kong.enterprise_edition package", "kong.nginx package", "kong.service package", "kong"], "titleterms": {"": 0, "client": 2, "cluster": 1, "content": [1, 2, 3, 4, 5, 6], "ctx": 3, "document": 0, "enterprise_edit": 4, "indic": 0, "ip": 1, "jwe": 4, "kong": [0, 1, 2, 3, 4, 5, 6, 7], "log": 1, "modul": [1, 2, 3, 4, 5, 6], "nginx": 5, "node": 1, "packag": [1, 2, 3, 4, 5, 6], "pdk": 0, "plugin": 1, "request": [1, 6], "respons": [1, 6], "router": 1, "servic": 6, "share": [3, 5], "submodul": [1, 2, 3, 4, 5, 6], "subpackag": 1, "tabl": 0, "telemetri": 1, "tl": 2, "vault": 1, "welcom": 0}})